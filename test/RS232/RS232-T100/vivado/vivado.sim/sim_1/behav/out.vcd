$date
   Fri Aug 25 16:45:52 2017
$end
$version
  2016.2
$end
$timescale
  1ps
$end
$scope module conquest_tb $end
$var reg 1 ! sys_clk $end
$var reg 1 " sys_rst_l $end
$var wire 1 # uart_XMIT_dataH $end
$var reg 1 $ xmitH $end
$var reg 8 % xmit_dataH [7:0] $end
$var wire 1 & xmit_doneH $end
$var reg 1 ' uart_REC_dataH $end
$var wire 8 ( rec_dataH [7:0] $end
$var wire 1 ) rec_readyH $end
$var reg 32 * _conc_pc [31:0] $end
$var reg 10 + _conc_opcode [9:0] $end
$var reg 20 , _conc_ram [0:1] $end
$scope module _conc_top_inst $end
$var wire 1 - sys_clk $end
$var wire 1 . sys_rst_l $end
$var wire 1 / xmitH $end
$var wire 8 0 xmit_dataH [7:0] $end
$var wire 1 1 uart_REC_dataH $end
$var reg 4 2 iRECEIVER_bitCell_cntrH [3:0] $end
$var reg 1 3 iRECEIVER_cntr_resetH $end
$var reg 1 4 iRECEIVER_countH $end
$var reg 3 5 iRECEIVER_next_state [2:0] $end
$var reg 1 6 iRECEIVER_rec_datH $end
$var reg 1 7 iRECEIVER_rec_datSyncH $end
$var reg 8 8 iRECEIVER_rec_dataH [7:0] $end
$var reg 1 9 iRECEIVER_rec_readyH $end
$var reg 1 : iRECEIVER_rec_readyH_temp $end
$var reg 1 ; iRECEIVER_rec_readyInH $end
$var reg 4 < iRECEIVER_recd_bitCntrH [3:0] $end
$var reg 1 = iRECEIVER_rstCountH $end
$var reg 1 > iRECEIVER_shiftH $end
$var reg 3 ? iRECEIVER_state [2:0] $end
$var reg 4 @ iXMIT_bitCell_cntrH [3:0] $end
$var reg 4 A iXMIT_bitCountH [3:0] $end
$var reg 1 B iXMIT_countEnaH $end
$var reg 1 C iXMIT_ena_bitCountH $end
$var reg 1 D iXMIT_load_shiftRegH $end
$var reg 3 E iXMIT_next_state [2:0] $end
$var reg 1 F iXMIT_rst_bitCountH $end
$var reg 1 G iXMIT_shiftEnaH $end
$var reg 3 H iXMIT_state [2:0] $end
$var reg 1 I iXMIT_uart_xmitH $end
$var reg 2 J iXMIT_xmitDataSelH [1:0] $end
$var reg 8 K iXMIT_xmit_ShiftRegH [7:0] $end
$var reg 1 L iXMIT_xmit_doneH $end
$var reg 1 M iXMIT_xmit_doneInH $end
$var reg 8 N rec_dataH [7:0] $end
$var reg 8 O rec_dataH_temp [7:0] $end
$var reg 1 P rec_readyH $end
$var reg 1 Q uart_XMIT_dataH $end
$var reg 1 R xmit_doneH $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
1"
x#
0$
b0 %
0&
0'
b0 (
0)
b1 *
b110001111 +
b11100110100110001111 ,
0-
1.
0/
b0 0
01
b0 2
13
04
b0 5
06
07
b0 8
09
0:
0;
b0 <
0=
0>
b0 ?
b0 @
b0 A
0B
0C
0D
b0 E
1F
0G
b0 H
1I
b1 J
b0 K
0L
1M
b0 N
b0 O
0P
1Q
0R
$end
#1000
1$
b11000111 %
0'
1/
b11000111 0
1D
b10 E
0F
b1 J
0M
