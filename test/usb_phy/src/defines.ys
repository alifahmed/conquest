(define DataIn_o_0 ::(bitvector 8))
(define LineState_o_0 ::(bitvector 2))
(define RxActive_o_0 ::(bitvector 1))
(define RxError_o_0 ::(bitvector 1))
(define RxValid_o_0 ::(bitvector 1))
(define TxReady_o_0 ::(bitvector 1))
(define i_rx_phy_byte_err_0 ::(bitvector 1))
(define i_rx_phy_bit_cnt_0 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_0 ::(bitvector 1))
(define i_rx_phy_shift_en_0 ::(bitvector 1))
(define i_rx_phy_sync_err_0 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_0 ::(bitvector 2))
(define i_rx_phy_dpll_state_0 ::(bitvector 2))
(define i_rx_phy_fs_ce_0 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_0 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_0 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_0 ::(bitvector 1))
(define i_rx_phy_fs_next_state_0 ::(bitvector 3))
(define i_rx_phy_fs_state_0 ::(bitvector 3))
(define i_rx_phy_hold_reg_0 ::(bitvector 8))
(define i_rx_phy_one_cnt_0 ::(bitvector 3))
(define i_rx_phy_rx_active_0 ::(bitvector 1))
(define i_rx_phy_rx_en_0 ::(bitvector 1))
(define i_rx_phy_rx_valid_0 ::(bitvector 1))
(define i_rx_phy_rx_valid1_0 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_0 ::(bitvector 1))
(define i_rx_phy_rxd_r_0 ::(bitvector 1))
(define i_rx_phy_rxd_s_0 ::(bitvector 1))
(define i_rx_phy_rxd_s0_0 ::(bitvector 1))
(define i_rx_phy_rxd_s1_0 ::(bitvector 1))
(define i_rx_phy_rxdn_s_0 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_0 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_0 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_0 ::(bitvector 1))
(define i_rx_phy_rxdp_s_0 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_0 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_0 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_0 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_0 ::(bitvector 1))
(define i_rx_phy_sd_r_0 ::(bitvector 1))
(define i_rx_phy_se0_r_0 ::(bitvector 1))
(define i_rx_phy_se0_s_0 ::(bitvector 1))
(define i_rx_phy_sync_err_d_0 ::(bitvector 1))
(define i_rx_phy_synced_d_0 ::(bitvector 1))
(define i_tx_phy_TxReady_o_0 ::(bitvector 1))
(define i_tx_phy_append_eop_0 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_0 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_0 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_0 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_0 ::(bitvector 1))
(define i_tx_phy_bit_cnt_0 ::(bitvector 3))
(define i_tx_phy_data_done_0 ::(bitvector 1))
(define i_tx_phy_hold_reg_0 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_0 ::(bitvector 8))
(define i_tx_phy_ld_data_0 ::(bitvector 1))
(define i_tx_phy_ld_data_d_0 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_0 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_0 ::(bitvector 1))
(define i_tx_phy_next_state_0 ::(bitvector 3))
(define i_tx_phy_one_cnt_0 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_0 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_0 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_0 ::(bitvector 1))
(define i_tx_phy_sft_done_0 ::(bitvector 1))
(define i_tx_phy_sft_done_r_0 ::(bitvector 1))
(define i_tx_phy_state_0 ::(bitvector 3))
(define i_tx_phy_stuff_0 ::(bitvector 1))
(define i_tx_phy_tx_ip_0 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_0 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_0 ::(bitvector 1))
(define i_tx_phy_txdn_0 ::(bitvector 1))
(define i_tx_phy_txdp_0 ::(bitvector 1))
(define i_tx_phy_txoe_0 ::(bitvector 1))
(define i_tx_phy_txoe_r1_0 ::(bitvector 1))
(define i_tx_phy_txoe_r2_0 ::(bitvector 1))
(define rst_cnt_0 ::(bitvector 5))
(define txdn_0 ::(bitvector 1))
(define txdp_0 ::(bitvector 1))
(define txoe_0 ::(bitvector 1))
(define usb_rst_0 ::(bitvector 1))
(define DataOut_i_0 ::(bitvector 8))
(define TxValid_i_0 ::(bitvector 1))
(define clk_0 ::(bitvector 1))
(define phy_tx_mode_0 ::(bitvector 1))
(define rst_0 ::(bitvector 1))
(define rxd_0 ::(bitvector 1))
(define rxdn_0 ::(bitvector 1))
(define rxdp_0 ::(bitvector 1))
(define DataIn_o_1 ::(bitvector 8))
(define LineState_o_1 ::(bitvector 2))
(define RxActive_o_1 ::(bitvector 1))
(define RxError_o_1 ::(bitvector 1))
(define RxValid_o_1 ::(bitvector 1))
(define TxReady_o_1 ::(bitvector 1))
(define i_rx_phy_byte_err_1 ::(bitvector 1))
(define i_rx_phy_bit_cnt_1 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_1 ::(bitvector 1))
(define i_rx_phy_shift_en_1 ::(bitvector 1))
(define i_rx_phy_sync_err_1 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_1 ::(bitvector 2))
(define i_rx_phy_dpll_state_1 ::(bitvector 2))
(define i_rx_phy_fs_ce_1 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_1 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_1 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_1 ::(bitvector 1))
(define i_rx_phy_fs_next_state_1 ::(bitvector 3))
(define i_rx_phy_fs_state_1 ::(bitvector 3))
(define i_rx_phy_hold_reg_1 ::(bitvector 8))
(define i_rx_phy_one_cnt_1 ::(bitvector 3))
(define i_rx_phy_rx_active_1 ::(bitvector 1))
(define i_rx_phy_rx_en_1 ::(bitvector 1))
(define i_rx_phy_rx_valid_1 ::(bitvector 1))
(define i_rx_phy_rx_valid1_1 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_1 ::(bitvector 1))
(define i_rx_phy_rxd_r_1 ::(bitvector 1))
(define i_rx_phy_rxd_s_1 ::(bitvector 1))
(define i_rx_phy_rxd_s0_1 ::(bitvector 1))
(define i_rx_phy_rxd_s1_1 ::(bitvector 1))
(define i_rx_phy_rxdn_s_1 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_1 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_1 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_1 ::(bitvector 1))
(define i_rx_phy_rxdp_s_1 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_1 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_1 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_1 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_1 ::(bitvector 1))
(define i_rx_phy_sd_r_1 ::(bitvector 1))
(define i_rx_phy_se0_r_1 ::(bitvector 1))
(define i_rx_phy_se0_s_1 ::(bitvector 1))
(define i_rx_phy_sync_err_d_1 ::(bitvector 1))
(define i_rx_phy_synced_d_1 ::(bitvector 1))
(define i_tx_phy_TxReady_o_1 ::(bitvector 1))
(define i_tx_phy_append_eop_1 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_1 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_1 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_1 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_1 ::(bitvector 1))
(define i_tx_phy_bit_cnt_1 ::(bitvector 3))
(define i_tx_phy_data_done_1 ::(bitvector 1))
(define i_tx_phy_hold_reg_1 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_1 ::(bitvector 8))
(define i_tx_phy_ld_data_1 ::(bitvector 1))
(define i_tx_phy_ld_data_d_1 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_1 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_1 ::(bitvector 1))
(define i_tx_phy_next_state_1 ::(bitvector 3))
(define i_tx_phy_one_cnt_1 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_1 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_1 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_1 ::(bitvector 1))
(define i_tx_phy_sft_done_1 ::(bitvector 1))
(define i_tx_phy_sft_done_r_1 ::(bitvector 1))
(define i_tx_phy_state_1 ::(bitvector 3))
(define i_tx_phy_stuff_1 ::(bitvector 1))
(define i_tx_phy_tx_ip_1 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_1 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_1 ::(bitvector 1))
(define i_tx_phy_txdn_1 ::(bitvector 1))
(define i_tx_phy_txdp_1 ::(bitvector 1))
(define i_tx_phy_txoe_1 ::(bitvector 1))
(define i_tx_phy_txoe_r1_1 ::(bitvector 1))
(define i_tx_phy_txoe_r2_1 ::(bitvector 1))
(define rst_cnt_1 ::(bitvector 5))
(define txdn_1 ::(bitvector 1))
(define txdp_1 ::(bitvector 1))
(define txoe_1 ::(bitvector 1))
(define usb_rst_1 ::(bitvector 1))
(define DataOut_i_1 ::(bitvector 8))
(define TxValid_i_1 ::(bitvector 1))
(define clk_1 ::(bitvector 1))
(define phy_tx_mode_1 ::(bitvector 1))
(define rst_1 ::(bitvector 1))
(define rxd_1 ::(bitvector 1))
(define rxdn_1 ::(bitvector 1))
(define rxdp_1 ::(bitvector 1))
(define DataIn_o_2 ::(bitvector 8))
(define LineState_o_2 ::(bitvector 2))
(define RxActive_o_2 ::(bitvector 1))
(define RxError_o_2 ::(bitvector 1))
(define RxValid_o_2 ::(bitvector 1))
(define TxReady_o_2 ::(bitvector 1))
(define i_rx_phy_byte_err_2 ::(bitvector 1))
(define i_rx_phy_bit_cnt_2 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_2 ::(bitvector 1))
(define i_rx_phy_shift_en_2 ::(bitvector 1))
(define i_rx_phy_sync_err_2 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_2 ::(bitvector 2))
(define i_rx_phy_dpll_state_2 ::(bitvector 2))
(define i_rx_phy_fs_ce_2 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_2 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_2 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_2 ::(bitvector 1))
(define i_rx_phy_fs_next_state_2 ::(bitvector 3))
(define i_rx_phy_fs_state_2 ::(bitvector 3))
(define i_rx_phy_hold_reg_2 ::(bitvector 8))
(define i_rx_phy_one_cnt_2 ::(bitvector 3))
(define i_rx_phy_rx_active_2 ::(bitvector 1))
(define i_rx_phy_rx_en_2 ::(bitvector 1))
(define i_rx_phy_rx_valid_2 ::(bitvector 1))
(define i_rx_phy_rx_valid1_2 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_2 ::(bitvector 1))
(define i_rx_phy_rxd_r_2 ::(bitvector 1))
(define i_rx_phy_rxd_s_2 ::(bitvector 1))
(define i_rx_phy_rxd_s0_2 ::(bitvector 1))
(define i_rx_phy_rxd_s1_2 ::(bitvector 1))
(define i_rx_phy_rxdn_s_2 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_2 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_2 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_2 ::(bitvector 1))
(define i_rx_phy_rxdp_s_2 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_2 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_2 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_2 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_2 ::(bitvector 1))
(define i_rx_phy_sd_r_2 ::(bitvector 1))
(define i_rx_phy_se0_r_2 ::(bitvector 1))
(define i_rx_phy_se0_s_2 ::(bitvector 1))
(define i_rx_phy_sync_err_d_2 ::(bitvector 1))
(define i_rx_phy_synced_d_2 ::(bitvector 1))
(define i_tx_phy_TxReady_o_2 ::(bitvector 1))
(define i_tx_phy_append_eop_2 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_2 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_2 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_2 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_2 ::(bitvector 1))
(define i_tx_phy_bit_cnt_2 ::(bitvector 3))
(define i_tx_phy_data_done_2 ::(bitvector 1))
(define i_tx_phy_hold_reg_2 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_2 ::(bitvector 8))
(define i_tx_phy_ld_data_2 ::(bitvector 1))
(define i_tx_phy_ld_data_d_2 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_2 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_2 ::(bitvector 1))
(define i_tx_phy_next_state_2 ::(bitvector 3))
(define i_tx_phy_one_cnt_2 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_2 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_2 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_2 ::(bitvector 1))
(define i_tx_phy_sft_done_2 ::(bitvector 1))
(define i_tx_phy_sft_done_r_2 ::(bitvector 1))
(define i_tx_phy_state_2 ::(bitvector 3))
(define i_tx_phy_stuff_2 ::(bitvector 1))
(define i_tx_phy_tx_ip_2 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_2 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_2 ::(bitvector 1))
(define i_tx_phy_txdn_2 ::(bitvector 1))
(define i_tx_phy_txdp_2 ::(bitvector 1))
(define i_tx_phy_txoe_2 ::(bitvector 1))
(define i_tx_phy_txoe_r1_2 ::(bitvector 1))
(define i_tx_phy_txoe_r2_2 ::(bitvector 1))
(define rst_cnt_2 ::(bitvector 5))
(define txdn_2 ::(bitvector 1))
(define txdp_2 ::(bitvector 1))
(define txoe_2 ::(bitvector 1))
(define usb_rst_2 ::(bitvector 1))
(define DataOut_i_2 ::(bitvector 8))
(define TxValid_i_2 ::(bitvector 1))
(define clk_2 ::(bitvector 1))
(define phy_tx_mode_2 ::(bitvector 1))
(define rst_2 ::(bitvector 1))
(define rxd_2 ::(bitvector 1))
(define rxdn_2 ::(bitvector 1))
(define rxdp_2 ::(bitvector 1))
(define DataIn_o_3 ::(bitvector 8))
(define LineState_o_3 ::(bitvector 2))
(define RxActive_o_3 ::(bitvector 1))
(define RxError_o_3 ::(bitvector 1))
(define RxValid_o_3 ::(bitvector 1))
(define TxReady_o_3 ::(bitvector 1))
(define i_rx_phy_byte_err_3 ::(bitvector 1))
(define i_rx_phy_bit_cnt_3 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_3 ::(bitvector 1))
(define i_rx_phy_shift_en_3 ::(bitvector 1))
(define i_rx_phy_sync_err_3 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_3 ::(bitvector 2))
(define i_rx_phy_dpll_state_3 ::(bitvector 2))
(define i_rx_phy_fs_ce_3 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_3 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_3 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_3 ::(bitvector 1))
(define i_rx_phy_fs_next_state_3 ::(bitvector 3))
(define i_rx_phy_fs_state_3 ::(bitvector 3))
(define i_rx_phy_hold_reg_3 ::(bitvector 8))
(define i_rx_phy_one_cnt_3 ::(bitvector 3))
(define i_rx_phy_rx_active_3 ::(bitvector 1))
(define i_rx_phy_rx_en_3 ::(bitvector 1))
(define i_rx_phy_rx_valid_3 ::(bitvector 1))
(define i_rx_phy_rx_valid1_3 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_3 ::(bitvector 1))
(define i_rx_phy_rxd_r_3 ::(bitvector 1))
(define i_rx_phy_rxd_s_3 ::(bitvector 1))
(define i_rx_phy_rxd_s0_3 ::(bitvector 1))
(define i_rx_phy_rxd_s1_3 ::(bitvector 1))
(define i_rx_phy_rxdn_s_3 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_3 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_3 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_3 ::(bitvector 1))
(define i_rx_phy_rxdp_s_3 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_3 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_3 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_3 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_3 ::(bitvector 1))
(define i_rx_phy_sd_r_3 ::(bitvector 1))
(define i_rx_phy_se0_r_3 ::(bitvector 1))
(define i_rx_phy_se0_s_3 ::(bitvector 1))
(define i_rx_phy_sync_err_d_3 ::(bitvector 1))
(define i_rx_phy_synced_d_3 ::(bitvector 1))
(define i_tx_phy_TxReady_o_3 ::(bitvector 1))
(define i_tx_phy_append_eop_3 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_3 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_3 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_3 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_3 ::(bitvector 1))
(define i_tx_phy_bit_cnt_3 ::(bitvector 3))
(define i_tx_phy_data_done_3 ::(bitvector 1))
(define i_tx_phy_hold_reg_3 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_3 ::(bitvector 8))
(define i_tx_phy_ld_data_3 ::(bitvector 1))
(define i_tx_phy_ld_data_d_3 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_3 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_3 ::(bitvector 1))
(define i_tx_phy_next_state_3 ::(bitvector 3))
(define i_tx_phy_one_cnt_3 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_3 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_3 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_3 ::(bitvector 1))
(define i_tx_phy_sft_done_3 ::(bitvector 1))
(define i_tx_phy_sft_done_r_3 ::(bitvector 1))
(define i_tx_phy_state_3 ::(bitvector 3))
(define i_tx_phy_stuff_3 ::(bitvector 1))
(define i_tx_phy_tx_ip_3 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_3 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_3 ::(bitvector 1))
(define i_tx_phy_txdn_3 ::(bitvector 1))
(define i_tx_phy_txdp_3 ::(bitvector 1))
(define i_tx_phy_txoe_3 ::(bitvector 1))
(define i_tx_phy_txoe_r1_3 ::(bitvector 1))
(define i_tx_phy_txoe_r2_3 ::(bitvector 1))
(define rst_cnt_3 ::(bitvector 5))
(define txdn_3 ::(bitvector 1))
(define txdp_3 ::(bitvector 1))
(define txoe_3 ::(bitvector 1))
(define usb_rst_3 ::(bitvector 1))
(define DataOut_i_3 ::(bitvector 8))
(define TxValid_i_3 ::(bitvector 1))
(define clk_3 ::(bitvector 1))
(define phy_tx_mode_3 ::(bitvector 1))
(define rst_3 ::(bitvector 1))
(define rxd_3 ::(bitvector 1))
(define rxdn_3 ::(bitvector 1))
(define rxdp_3 ::(bitvector 1))
(define DataIn_o_4 ::(bitvector 8))
(define LineState_o_4 ::(bitvector 2))
(define RxActive_o_4 ::(bitvector 1))
(define RxError_o_4 ::(bitvector 1))
(define RxValid_o_4 ::(bitvector 1))
(define TxReady_o_4 ::(bitvector 1))
(define i_rx_phy_byte_err_4 ::(bitvector 1))
(define i_rx_phy_bit_cnt_4 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_4 ::(bitvector 1))
(define i_rx_phy_shift_en_4 ::(bitvector 1))
(define i_rx_phy_sync_err_4 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_4 ::(bitvector 2))
(define i_rx_phy_dpll_state_4 ::(bitvector 2))
(define i_rx_phy_fs_ce_4 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_4 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_4 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_4 ::(bitvector 1))
(define i_rx_phy_fs_next_state_4 ::(bitvector 3))
(define i_rx_phy_fs_state_4 ::(bitvector 3))
(define i_rx_phy_hold_reg_4 ::(bitvector 8))
(define i_rx_phy_one_cnt_4 ::(bitvector 3))
(define i_rx_phy_rx_active_4 ::(bitvector 1))
(define i_rx_phy_rx_en_4 ::(bitvector 1))
(define i_rx_phy_rx_valid_4 ::(bitvector 1))
(define i_rx_phy_rx_valid1_4 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_4 ::(bitvector 1))
(define i_rx_phy_rxd_r_4 ::(bitvector 1))
(define i_rx_phy_rxd_s_4 ::(bitvector 1))
(define i_rx_phy_rxd_s0_4 ::(bitvector 1))
(define i_rx_phy_rxd_s1_4 ::(bitvector 1))
(define i_rx_phy_rxdn_s_4 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_4 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_4 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_4 ::(bitvector 1))
(define i_rx_phy_rxdp_s_4 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_4 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_4 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_4 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_4 ::(bitvector 1))
(define i_rx_phy_sd_r_4 ::(bitvector 1))
(define i_rx_phy_se0_r_4 ::(bitvector 1))
(define i_rx_phy_se0_s_4 ::(bitvector 1))
(define i_rx_phy_sync_err_d_4 ::(bitvector 1))
(define i_rx_phy_synced_d_4 ::(bitvector 1))
(define i_tx_phy_TxReady_o_4 ::(bitvector 1))
(define i_tx_phy_append_eop_4 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_4 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_4 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_4 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_4 ::(bitvector 1))
(define i_tx_phy_bit_cnt_4 ::(bitvector 3))
(define i_tx_phy_data_done_4 ::(bitvector 1))
(define i_tx_phy_hold_reg_4 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_4 ::(bitvector 8))
(define i_tx_phy_ld_data_4 ::(bitvector 1))
(define i_tx_phy_ld_data_d_4 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_4 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_4 ::(bitvector 1))
(define i_tx_phy_next_state_4 ::(bitvector 3))
(define i_tx_phy_one_cnt_4 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_4 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_4 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_4 ::(bitvector 1))
(define i_tx_phy_sft_done_4 ::(bitvector 1))
(define i_tx_phy_sft_done_r_4 ::(bitvector 1))
(define i_tx_phy_state_4 ::(bitvector 3))
(define i_tx_phy_stuff_4 ::(bitvector 1))
(define i_tx_phy_tx_ip_4 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_4 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_4 ::(bitvector 1))
(define i_tx_phy_txdn_4 ::(bitvector 1))
(define i_tx_phy_txdp_4 ::(bitvector 1))
(define i_tx_phy_txoe_4 ::(bitvector 1))
(define i_tx_phy_txoe_r1_4 ::(bitvector 1))
(define i_tx_phy_txoe_r2_4 ::(bitvector 1))
(define rst_cnt_4 ::(bitvector 5))
(define txdn_4 ::(bitvector 1))
(define txdp_4 ::(bitvector 1))
(define txoe_4 ::(bitvector 1))
(define usb_rst_4 ::(bitvector 1))
(define DataOut_i_4 ::(bitvector 8))
(define TxValid_i_4 ::(bitvector 1))
(define clk_4 ::(bitvector 1))
(define phy_tx_mode_4 ::(bitvector 1))
(define rst_4 ::(bitvector 1))
(define rxd_4 ::(bitvector 1))
(define rxdn_4 ::(bitvector 1))
(define rxdp_4 ::(bitvector 1))
(define DataIn_o_5 ::(bitvector 8))
(define LineState_o_5 ::(bitvector 2))
(define RxActive_o_5 ::(bitvector 1))
(define RxError_o_5 ::(bitvector 1))
(define RxValid_o_5 ::(bitvector 1))
(define TxReady_o_5 ::(bitvector 1))
(define i_rx_phy_byte_err_5 ::(bitvector 1))
(define i_rx_phy_bit_cnt_5 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_5 ::(bitvector 1))
(define i_rx_phy_shift_en_5 ::(bitvector 1))
(define i_rx_phy_sync_err_5 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_5 ::(bitvector 2))
(define i_rx_phy_dpll_state_5 ::(bitvector 2))
(define i_rx_phy_fs_ce_5 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_5 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_5 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_5 ::(bitvector 1))
(define i_rx_phy_fs_next_state_5 ::(bitvector 3))
(define i_rx_phy_fs_state_5 ::(bitvector 3))
(define i_rx_phy_hold_reg_5 ::(bitvector 8))
(define i_rx_phy_one_cnt_5 ::(bitvector 3))
(define i_rx_phy_rx_active_5 ::(bitvector 1))
(define i_rx_phy_rx_en_5 ::(bitvector 1))
(define i_rx_phy_rx_valid_5 ::(bitvector 1))
(define i_rx_phy_rx_valid1_5 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_5 ::(bitvector 1))
(define i_rx_phy_rxd_r_5 ::(bitvector 1))
(define i_rx_phy_rxd_s_5 ::(bitvector 1))
(define i_rx_phy_rxd_s0_5 ::(bitvector 1))
(define i_rx_phy_rxd_s1_5 ::(bitvector 1))
(define i_rx_phy_rxdn_s_5 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_5 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_5 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_5 ::(bitvector 1))
(define i_rx_phy_rxdp_s_5 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_5 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_5 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_5 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_5 ::(bitvector 1))
(define i_rx_phy_sd_r_5 ::(bitvector 1))
(define i_rx_phy_se0_r_5 ::(bitvector 1))
(define i_rx_phy_se0_s_5 ::(bitvector 1))
(define i_rx_phy_sync_err_d_5 ::(bitvector 1))
(define i_rx_phy_synced_d_5 ::(bitvector 1))
(define i_tx_phy_TxReady_o_5 ::(bitvector 1))
(define i_tx_phy_append_eop_5 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_5 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_5 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_5 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_5 ::(bitvector 1))
(define i_tx_phy_bit_cnt_5 ::(bitvector 3))
(define i_tx_phy_data_done_5 ::(bitvector 1))
(define i_tx_phy_hold_reg_5 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_5 ::(bitvector 8))
(define i_tx_phy_ld_data_5 ::(bitvector 1))
(define i_tx_phy_ld_data_d_5 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_5 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_5 ::(bitvector 1))
(define i_tx_phy_next_state_5 ::(bitvector 3))
(define i_tx_phy_one_cnt_5 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_5 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_5 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_5 ::(bitvector 1))
(define i_tx_phy_sft_done_5 ::(bitvector 1))
(define i_tx_phy_sft_done_r_5 ::(bitvector 1))
(define i_tx_phy_state_5 ::(bitvector 3))
(define i_tx_phy_stuff_5 ::(bitvector 1))
(define i_tx_phy_tx_ip_5 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_5 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_5 ::(bitvector 1))
(define i_tx_phy_txdn_5 ::(bitvector 1))
(define i_tx_phy_txdp_5 ::(bitvector 1))
(define i_tx_phy_txoe_5 ::(bitvector 1))
(define i_tx_phy_txoe_r1_5 ::(bitvector 1))
(define i_tx_phy_txoe_r2_5 ::(bitvector 1))
(define rst_cnt_5 ::(bitvector 5))
(define txdn_5 ::(bitvector 1))
(define txdp_5 ::(bitvector 1))
(define txoe_5 ::(bitvector 1))
(define usb_rst_5 ::(bitvector 1))
(define DataOut_i_5 ::(bitvector 8))
(define TxValid_i_5 ::(bitvector 1))
(define clk_5 ::(bitvector 1))
(define phy_tx_mode_5 ::(bitvector 1))
(define rst_5 ::(bitvector 1))
(define rxd_5 ::(bitvector 1))
(define rxdn_5 ::(bitvector 1))
(define rxdp_5 ::(bitvector 1))
(define DataIn_o_6 ::(bitvector 8))
(define LineState_o_6 ::(bitvector 2))
(define RxActive_o_6 ::(bitvector 1))
(define RxError_o_6 ::(bitvector 1))
(define RxValid_o_6 ::(bitvector 1))
(define TxReady_o_6 ::(bitvector 1))
(define i_rx_phy_byte_err_6 ::(bitvector 1))
(define i_rx_phy_bit_cnt_6 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_6 ::(bitvector 1))
(define i_rx_phy_shift_en_6 ::(bitvector 1))
(define i_rx_phy_sync_err_6 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_6 ::(bitvector 2))
(define i_rx_phy_dpll_state_6 ::(bitvector 2))
(define i_rx_phy_fs_ce_6 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_6 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_6 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_6 ::(bitvector 1))
(define i_rx_phy_fs_next_state_6 ::(bitvector 3))
(define i_rx_phy_fs_state_6 ::(bitvector 3))
(define i_rx_phy_hold_reg_6 ::(bitvector 8))
(define i_rx_phy_one_cnt_6 ::(bitvector 3))
(define i_rx_phy_rx_active_6 ::(bitvector 1))
(define i_rx_phy_rx_en_6 ::(bitvector 1))
(define i_rx_phy_rx_valid_6 ::(bitvector 1))
(define i_rx_phy_rx_valid1_6 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_6 ::(bitvector 1))
(define i_rx_phy_rxd_r_6 ::(bitvector 1))
(define i_rx_phy_rxd_s_6 ::(bitvector 1))
(define i_rx_phy_rxd_s0_6 ::(bitvector 1))
(define i_rx_phy_rxd_s1_6 ::(bitvector 1))
(define i_rx_phy_rxdn_s_6 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_6 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_6 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_6 ::(bitvector 1))
(define i_rx_phy_rxdp_s_6 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_6 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_6 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_6 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_6 ::(bitvector 1))
(define i_rx_phy_sd_r_6 ::(bitvector 1))
(define i_rx_phy_se0_r_6 ::(bitvector 1))
(define i_rx_phy_se0_s_6 ::(bitvector 1))
(define i_rx_phy_sync_err_d_6 ::(bitvector 1))
(define i_rx_phy_synced_d_6 ::(bitvector 1))
(define i_tx_phy_TxReady_o_6 ::(bitvector 1))
(define i_tx_phy_append_eop_6 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_6 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_6 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_6 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_6 ::(bitvector 1))
(define i_tx_phy_bit_cnt_6 ::(bitvector 3))
(define i_tx_phy_data_done_6 ::(bitvector 1))
(define i_tx_phy_hold_reg_6 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_6 ::(bitvector 8))
(define i_tx_phy_ld_data_6 ::(bitvector 1))
(define i_tx_phy_ld_data_d_6 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_6 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_6 ::(bitvector 1))
(define i_tx_phy_next_state_6 ::(bitvector 3))
(define i_tx_phy_one_cnt_6 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_6 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_6 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_6 ::(bitvector 1))
(define i_tx_phy_sft_done_6 ::(bitvector 1))
(define i_tx_phy_sft_done_r_6 ::(bitvector 1))
(define i_tx_phy_state_6 ::(bitvector 3))
(define i_tx_phy_stuff_6 ::(bitvector 1))
(define i_tx_phy_tx_ip_6 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_6 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_6 ::(bitvector 1))
(define i_tx_phy_txdn_6 ::(bitvector 1))
(define i_tx_phy_txdp_6 ::(bitvector 1))
(define i_tx_phy_txoe_6 ::(bitvector 1))
(define i_tx_phy_txoe_r1_6 ::(bitvector 1))
(define i_tx_phy_txoe_r2_6 ::(bitvector 1))
(define rst_cnt_6 ::(bitvector 5))
(define txdn_6 ::(bitvector 1))
(define txdp_6 ::(bitvector 1))
(define txoe_6 ::(bitvector 1))
(define usb_rst_6 ::(bitvector 1))
(define DataOut_i_6 ::(bitvector 8))
(define TxValid_i_6 ::(bitvector 1))
(define clk_6 ::(bitvector 1))
(define phy_tx_mode_6 ::(bitvector 1))
(define rst_6 ::(bitvector 1))
(define rxd_6 ::(bitvector 1))
(define rxdn_6 ::(bitvector 1))
(define rxdp_6 ::(bitvector 1))
(define DataIn_o_7 ::(bitvector 8))
(define LineState_o_7 ::(bitvector 2))
(define RxActive_o_7 ::(bitvector 1))
(define RxError_o_7 ::(bitvector 1))
(define RxValid_o_7 ::(bitvector 1))
(define TxReady_o_7 ::(bitvector 1))
(define i_rx_phy_byte_err_7 ::(bitvector 1))
(define i_rx_phy_bit_cnt_7 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_7 ::(bitvector 1))
(define i_rx_phy_shift_en_7 ::(bitvector 1))
(define i_rx_phy_sync_err_7 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_7 ::(bitvector 2))
(define i_rx_phy_dpll_state_7 ::(bitvector 2))
(define i_rx_phy_fs_ce_7 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_7 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_7 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_7 ::(bitvector 1))
(define i_rx_phy_fs_next_state_7 ::(bitvector 3))
(define i_rx_phy_fs_state_7 ::(bitvector 3))
(define i_rx_phy_hold_reg_7 ::(bitvector 8))
(define i_rx_phy_one_cnt_7 ::(bitvector 3))
(define i_rx_phy_rx_active_7 ::(bitvector 1))
(define i_rx_phy_rx_en_7 ::(bitvector 1))
(define i_rx_phy_rx_valid_7 ::(bitvector 1))
(define i_rx_phy_rx_valid1_7 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_7 ::(bitvector 1))
(define i_rx_phy_rxd_r_7 ::(bitvector 1))
(define i_rx_phy_rxd_s_7 ::(bitvector 1))
(define i_rx_phy_rxd_s0_7 ::(bitvector 1))
(define i_rx_phy_rxd_s1_7 ::(bitvector 1))
(define i_rx_phy_rxdn_s_7 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_7 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_7 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_7 ::(bitvector 1))
(define i_rx_phy_rxdp_s_7 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_7 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_7 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_7 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_7 ::(bitvector 1))
(define i_rx_phy_sd_r_7 ::(bitvector 1))
(define i_rx_phy_se0_r_7 ::(bitvector 1))
(define i_rx_phy_se0_s_7 ::(bitvector 1))
(define i_rx_phy_sync_err_d_7 ::(bitvector 1))
(define i_rx_phy_synced_d_7 ::(bitvector 1))
(define i_tx_phy_TxReady_o_7 ::(bitvector 1))
(define i_tx_phy_append_eop_7 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_7 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_7 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_7 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_7 ::(bitvector 1))
(define i_tx_phy_bit_cnt_7 ::(bitvector 3))
(define i_tx_phy_data_done_7 ::(bitvector 1))
(define i_tx_phy_hold_reg_7 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_7 ::(bitvector 8))
(define i_tx_phy_ld_data_7 ::(bitvector 1))
(define i_tx_phy_ld_data_d_7 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_7 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_7 ::(bitvector 1))
(define i_tx_phy_next_state_7 ::(bitvector 3))
(define i_tx_phy_one_cnt_7 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_7 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_7 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_7 ::(bitvector 1))
(define i_tx_phy_sft_done_7 ::(bitvector 1))
(define i_tx_phy_sft_done_r_7 ::(bitvector 1))
(define i_tx_phy_state_7 ::(bitvector 3))
(define i_tx_phy_stuff_7 ::(bitvector 1))
(define i_tx_phy_tx_ip_7 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_7 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_7 ::(bitvector 1))
(define i_tx_phy_txdn_7 ::(bitvector 1))
(define i_tx_phy_txdp_7 ::(bitvector 1))
(define i_tx_phy_txoe_7 ::(bitvector 1))
(define i_tx_phy_txoe_r1_7 ::(bitvector 1))
(define i_tx_phy_txoe_r2_7 ::(bitvector 1))
(define rst_cnt_7 ::(bitvector 5))
(define txdn_7 ::(bitvector 1))
(define txdp_7 ::(bitvector 1))
(define txoe_7 ::(bitvector 1))
(define usb_rst_7 ::(bitvector 1))
(define DataOut_i_7 ::(bitvector 8))
(define TxValid_i_7 ::(bitvector 1))
(define clk_7 ::(bitvector 1))
(define phy_tx_mode_7 ::(bitvector 1))
(define rst_7 ::(bitvector 1))
(define rxd_7 ::(bitvector 1))
(define rxdn_7 ::(bitvector 1))
(define rxdp_7 ::(bitvector 1))
(define DataIn_o_8 ::(bitvector 8))
(define LineState_o_8 ::(bitvector 2))
(define RxActive_o_8 ::(bitvector 1))
(define RxError_o_8 ::(bitvector 1))
(define RxValid_o_8 ::(bitvector 1))
(define TxReady_o_8 ::(bitvector 1))
(define i_rx_phy_byte_err_8 ::(bitvector 1))
(define i_rx_phy_bit_cnt_8 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_8 ::(bitvector 1))
(define i_rx_phy_shift_en_8 ::(bitvector 1))
(define i_rx_phy_sync_err_8 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_8 ::(bitvector 2))
(define i_rx_phy_dpll_state_8 ::(bitvector 2))
(define i_rx_phy_fs_ce_8 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_8 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_8 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_8 ::(bitvector 1))
(define i_rx_phy_fs_next_state_8 ::(bitvector 3))
(define i_rx_phy_fs_state_8 ::(bitvector 3))
(define i_rx_phy_hold_reg_8 ::(bitvector 8))
(define i_rx_phy_one_cnt_8 ::(bitvector 3))
(define i_rx_phy_rx_active_8 ::(bitvector 1))
(define i_rx_phy_rx_en_8 ::(bitvector 1))
(define i_rx_phy_rx_valid_8 ::(bitvector 1))
(define i_rx_phy_rx_valid1_8 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_8 ::(bitvector 1))
(define i_rx_phy_rxd_r_8 ::(bitvector 1))
(define i_rx_phy_rxd_s_8 ::(bitvector 1))
(define i_rx_phy_rxd_s0_8 ::(bitvector 1))
(define i_rx_phy_rxd_s1_8 ::(bitvector 1))
(define i_rx_phy_rxdn_s_8 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_8 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_8 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_8 ::(bitvector 1))
(define i_rx_phy_rxdp_s_8 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_8 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_8 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_8 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_8 ::(bitvector 1))
(define i_rx_phy_sd_r_8 ::(bitvector 1))
(define i_rx_phy_se0_r_8 ::(bitvector 1))
(define i_rx_phy_se0_s_8 ::(bitvector 1))
(define i_rx_phy_sync_err_d_8 ::(bitvector 1))
(define i_rx_phy_synced_d_8 ::(bitvector 1))
(define i_tx_phy_TxReady_o_8 ::(bitvector 1))
(define i_tx_phy_append_eop_8 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_8 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_8 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_8 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_8 ::(bitvector 1))
(define i_tx_phy_bit_cnt_8 ::(bitvector 3))
(define i_tx_phy_data_done_8 ::(bitvector 1))
(define i_tx_phy_hold_reg_8 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_8 ::(bitvector 8))
(define i_tx_phy_ld_data_8 ::(bitvector 1))
(define i_tx_phy_ld_data_d_8 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_8 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_8 ::(bitvector 1))
(define i_tx_phy_next_state_8 ::(bitvector 3))
(define i_tx_phy_one_cnt_8 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_8 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_8 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_8 ::(bitvector 1))
(define i_tx_phy_sft_done_8 ::(bitvector 1))
(define i_tx_phy_sft_done_r_8 ::(bitvector 1))
(define i_tx_phy_state_8 ::(bitvector 3))
(define i_tx_phy_stuff_8 ::(bitvector 1))
(define i_tx_phy_tx_ip_8 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_8 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_8 ::(bitvector 1))
(define i_tx_phy_txdn_8 ::(bitvector 1))
(define i_tx_phy_txdp_8 ::(bitvector 1))
(define i_tx_phy_txoe_8 ::(bitvector 1))
(define i_tx_phy_txoe_r1_8 ::(bitvector 1))
(define i_tx_phy_txoe_r2_8 ::(bitvector 1))
(define rst_cnt_8 ::(bitvector 5))
(define txdn_8 ::(bitvector 1))
(define txdp_8 ::(bitvector 1))
(define txoe_8 ::(bitvector 1))
(define usb_rst_8 ::(bitvector 1))
(define DataOut_i_8 ::(bitvector 8))
(define TxValid_i_8 ::(bitvector 1))
(define clk_8 ::(bitvector 1))
(define phy_tx_mode_8 ::(bitvector 1))
(define rst_8 ::(bitvector 1))
(define rxd_8 ::(bitvector 1))
(define rxdn_8 ::(bitvector 1))
(define rxdp_8 ::(bitvector 1))
(define DataIn_o_9 ::(bitvector 8))
(define LineState_o_9 ::(bitvector 2))
(define RxActive_o_9 ::(bitvector 1))
(define RxError_o_9 ::(bitvector 1))
(define RxValid_o_9 ::(bitvector 1))
(define TxReady_o_9 ::(bitvector 1))
(define i_rx_phy_byte_err_9 ::(bitvector 1))
(define i_rx_phy_bit_cnt_9 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_9 ::(bitvector 1))
(define i_rx_phy_shift_en_9 ::(bitvector 1))
(define i_rx_phy_sync_err_9 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_9 ::(bitvector 2))
(define i_rx_phy_dpll_state_9 ::(bitvector 2))
(define i_rx_phy_fs_ce_9 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_9 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_9 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_9 ::(bitvector 1))
(define i_rx_phy_fs_next_state_9 ::(bitvector 3))
(define i_rx_phy_fs_state_9 ::(bitvector 3))
(define i_rx_phy_hold_reg_9 ::(bitvector 8))
(define i_rx_phy_one_cnt_9 ::(bitvector 3))
(define i_rx_phy_rx_active_9 ::(bitvector 1))
(define i_rx_phy_rx_en_9 ::(bitvector 1))
(define i_rx_phy_rx_valid_9 ::(bitvector 1))
(define i_rx_phy_rx_valid1_9 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_9 ::(bitvector 1))
(define i_rx_phy_rxd_r_9 ::(bitvector 1))
(define i_rx_phy_rxd_s_9 ::(bitvector 1))
(define i_rx_phy_rxd_s0_9 ::(bitvector 1))
(define i_rx_phy_rxd_s1_9 ::(bitvector 1))
(define i_rx_phy_rxdn_s_9 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_9 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_9 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_9 ::(bitvector 1))
(define i_rx_phy_rxdp_s_9 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_9 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_9 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_9 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_9 ::(bitvector 1))
(define i_rx_phy_sd_r_9 ::(bitvector 1))
(define i_rx_phy_se0_r_9 ::(bitvector 1))
(define i_rx_phy_se0_s_9 ::(bitvector 1))
(define i_rx_phy_sync_err_d_9 ::(bitvector 1))
(define i_rx_phy_synced_d_9 ::(bitvector 1))
(define i_tx_phy_TxReady_o_9 ::(bitvector 1))
(define i_tx_phy_append_eop_9 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_9 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_9 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_9 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_9 ::(bitvector 1))
(define i_tx_phy_bit_cnt_9 ::(bitvector 3))
(define i_tx_phy_data_done_9 ::(bitvector 1))
(define i_tx_phy_hold_reg_9 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_9 ::(bitvector 8))
(define i_tx_phy_ld_data_9 ::(bitvector 1))
(define i_tx_phy_ld_data_d_9 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_9 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_9 ::(bitvector 1))
(define i_tx_phy_next_state_9 ::(bitvector 3))
(define i_tx_phy_one_cnt_9 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_9 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_9 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_9 ::(bitvector 1))
(define i_tx_phy_sft_done_9 ::(bitvector 1))
(define i_tx_phy_sft_done_r_9 ::(bitvector 1))
(define i_tx_phy_state_9 ::(bitvector 3))
(define i_tx_phy_stuff_9 ::(bitvector 1))
(define i_tx_phy_tx_ip_9 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_9 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_9 ::(bitvector 1))
(define i_tx_phy_txdn_9 ::(bitvector 1))
(define i_tx_phy_txdp_9 ::(bitvector 1))
(define i_tx_phy_txoe_9 ::(bitvector 1))
(define i_tx_phy_txoe_r1_9 ::(bitvector 1))
(define i_tx_phy_txoe_r2_9 ::(bitvector 1))
(define rst_cnt_9 ::(bitvector 5))
(define txdn_9 ::(bitvector 1))
(define txdp_9 ::(bitvector 1))
(define txoe_9 ::(bitvector 1))
(define usb_rst_9 ::(bitvector 1))
(define DataOut_i_9 ::(bitvector 8))
(define TxValid_i_9 ::(bitvector 1))
(define clk_9 ::(bitvector 1))
(define phy_tx_mode_9 ::(bitvector 1))
(define rst_9 ::(bitvector 1))
(define rxd_9 ::(bitvector 1))
(define rxdn_9 ::(bitvector 1))
(define rxdp_9 ::(bitvector 1))
(define DataIn_o_10 ::(bitvector 8))
(define LineState_o_10 ::(bitvector 2))
(define RxActive_o_10 ::(bitvector 1))
(define RxError_o_10 ::(bitvector 1))
(define RxValid_o_10 ::(bitvector 1))
(define TxReady_o_10 ::(bitvector 1))
(define i_rx_phy_byte_err_10 ::(bitvector 1))
(define i_rx_phy_bit_cnt_10 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_10 ::(bitvector 1))
(define i_rx_phy_shift_en_10 ::(bitvector 1))
(define i_rx_phy_sync_err_10 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_10 ::(bitvector 2))
(define i_rx_phy_dpll_state_10 ::(bitvector 2))
(define i_rx_phy_fs_ce_10 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_10 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_10 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_10 ::(bitvector 1))
(define i_rx_phy_fs_next_state_10 ::(bitvector 3))
(define i_rx_phy_fs_state_10 ::(bitvector 3))
(define i_rx_phy_hold_reg_10 ::(bitvector 8))
(define i_rx_phy_one_cnt_10 ::(bitvector 3))
(define i_rx_phy_rx_active_10 ::(bitvector 1))
(define i_rx_phy_rx_en_10 ::(bitvector 1))
(define i_rx_phy_rx_valid_10 ::(bitvector 1))
(define i_rx_phy_rx_valid1_10 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_10 ::(bitvector 1))
(define i_rx_phy_rxd_r_10 ::(bitvector 1))
(define i_rx_phy_rxd_s_10 ::(bitvector 1))
(define i_rx_phy_rxd_s0_10 ::(bitvector 1))
(define i_rx_phy_rxd_s1_10 ::(bitvector 1))
(define i_rx_phy_rxdn_s_10 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_10 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_10 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_10 ::(bitvector 1))
(define i_rx_phy_rxdp_s_10 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_10 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_10 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_10 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_10 ::(bitvector 1))
(define i_rx_phy_sd_r_10 ::(bitvector 1))
(define i_rx_phy_se0_r_10 ::(bitvector 1))
(define i_rx_phy_se0_s_10 ::(bitvector 1))
(define i_rx_phy_sync_err_d_10 ::(bitvector 1))
(define i_rx_phy_synced_d_10 ::(bitvector 1))
(define i_tx_phy_TxReady_o_10 ::(bitvector 1))
(define i_tx_phy_append_eop_10 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_10 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_10 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_10 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_10 ::(bitvector 1))
(define i_tx_phy_bit_cnt_10 ::(bitvector 3))
(define i_tx_phy_data_done_10 ::(bitvector 1))
(define i_tx_phy_hold_reg_10 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_10 ::(bitvector 8))
(define i_tx_phy_ld_data_10 ::(bitvector 1))
(define i_tx_phy_ld_data_d_10 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_10 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_10 ::(bitvector 1))
(define i_tx_phy_next_state_10 ::(bitvector 3))
(define i_tx_phy_one_cnt_10 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_10 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_10 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_10 ::(bitvector 1))
(define i_tx_phy_sft_done_10 ::(bitvector 1))
(define i_tx_phy_sft_done_r_10 ::(bitvector 1))
(define i_tx_phy_state_10 ::(bitvector 3))
(define i_tx_phy_stuff_10 ::(bitvector 1))
(define i_tx_phy_tx_ip_10 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_10 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_10 ::(bitvector 1))
(define i_tx_phy_txdn_10 ::(bitvector 1))
(define i_tx_phy_txdp_10 ::(bitvector 1))
(define i_tx_phy_txoe_10 ::(bitvector 1))
(define i_tx_phy_txoe_r1_10 ::(bitvector 1))
(define i_tx_phy_txoe_r2_10 ::(bitvector 1))
(define rst_cnt_10 ::(bitvector 5))
(define txdn_10 ::(bitvector 1))
(define txdp_10 ::(bitvector 1))
(define txoe_10 ::(bitvector 1))
(define usb_rst_10 ::(bitvector 1))
(define DataOut_i_10 ::(bitvector 8))
(define TxValid_i_10 ::(bitvector 1))
(define clk_10 ::(bitvector 1))
(define phy_tx_mode_10 ::(bitvector 1))
(define rst_10 ::(bitvector 1))
(define rxd_10 ::(bitvector 1))
(define rxdn_10 ::(bitvector 1))
(define rxdp_10 ::(bitvector 1))
(define DataIn_o_11 ::(bitvector 8))
(define LineState_o_11 ::(bitvector 2))
(define RxActive_o_11 ::(bitvector 1))
(define RxError_o_11 ::(bitvector 1))
(define RxValid_o_11 ::(bitvector 1))
(define TxReady_o_11 ::(bitvector 1))
(define i_rx_phy_byte_err_11 ::(bitvector 1))
(define i_rx_phy_bit_cnt_11 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_11 ::(bitvector 1))
(define i_rx_phy_shift_en_11 ::(bitvector 1))
(define i_rx_phy_sync_err_11 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_11 ::(bitvector 2))
(define i_rx_phy_dpll_state_11 ::(bitvector 2))
(define i_rx_phy_fs_ce_11 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_11 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_11 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_11 ::(bitvector 1))
(define i_rx_phy_fs_next_state_11 ::(bitvector 3))
(define i_rx_phy_fs_state_11 ::(bitvector 3))
(define i_rx_phy_hold_reg_11 ::(bitvector 8))
(define i_rx_phy_one_cnt_11 ::(bitvector 3))
(define i_rx_phy_rx_active_11 ::(bitvector 1))
(define i_rx_phy_rx_en_11 ::(bitvector 1))
(define i_rx_phy_rx_valid_11 ::(bitvector 1))
(define i_rx_phy_rx_valid1_11 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_11 ::(bitvector 1))
(define i_rx_phy_rxd_r_11 ::(bitvector 1))
(define i_rx_phy_rxd_s_11 ::(bitvector 1))
(define i_rx_phy_rxd_s0_11 ::(bitvector 1))
(define i_rx_phy_rxd_s1_11 ::(bitvector 1))
(define i_rx_phy_rxdn_s_11 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_11 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_11 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_11 ::(bitvector 1))
(define i_rx_phy_rxdp_s_11 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_11 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_11 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_11 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_11 ::(bitvector 1))
(define i_rx_phy_sd_r_11 ::(bitvector 1))
(define i_rx_phy_se0_r_11 ::(bitvector 1))
(define i_rx_phy_se0_s_11 ::(bitvector 1))
(define i_rx_phy_sync_err_d_11 ::(bitvector 1))
(define i_rx_phy_synced_d_11 ::(bitvector 1))
(define i_tx_phy_TxReady_o_11 ::(bitvector 1))
(define i_tx_phy_append_eop_11 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_11 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_11 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_11 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_11 ::(bitvector 1))
(define i_tx_phy_bit_cnt_11 ::(bitvector 3))
(define i_tx_phy_data_done_11 ::(bitvector 1))
(define i_tx_phy_hold_reg_11 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_11 ::(bitvector 8))
(define i_tx_phy_ld_data_11 ::(bitvector 1))
(define i_tx_phy_ld_data_d_11 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_11 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_11 ::(bitvector 1))
(define i_tx_phy_next_state_11 ::(bitvector 3))
(define i_tx_phy_one_cnt_11 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_11 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_11 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_11 ::(bitvector 1))
(define i_tx_phy_sft_done_11 ::(bitvector 1))
(define i_tx_phy_sft_done_r_11 ::(bitvector 1))
(define i_tx_phy_state_11 ::(bitvector 3))
(define i_tx_phy_stuff_11 ::(bitvector 1))
(define i_tx_phy_tx_ip_11 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_11 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_11 ::(bitvector 1))
(define i_tx_phy_txdn_11 ::(bitvector 1))
(define i_tx_phy_txdp_11 ::(bitvector 1))
(define i_tx_phy_txoe_11 ::(bitvector 1))
(define i_tx_phy_txoe_r1_11 ::(bitvector 1))
(define i_tx_phy_txoe_r2_11 ::(bitvector 1))
(define rst_cnt_11 ::(bitvector 5))
(define txdn_11 ::(bitvector 1))
(define txdp_11 ::(bitvector 1))
(define txoe_11 ::(bitvector 1))
(define usb_rst_11 ::(bitvector 1))
(define DataOut_i_11 ::(bitvector 8))
(define TxValid_i_11 ::(bitvector 1))
(define clk_11 ::(bitvector 1))
(define phy_tx_mode_11 ::(bitvector 1))
(define rst_11 ::(bitvector 1))
(define rxd_11 ::(bitvector 1))
(define rxdn_11 ::(bitvector 1))
(define rxdp_11 ::(bitvector 1))
(define DataIn_o_12 ::(bitvector 8))
(define LineState_o_12 ::(bitvector 2))
(define RxActive_o_12 ::(bitvector 1))
(define RxError_o_12 ::(bitvector 1))
(define RxValid_o_12 ::(bitvector 1))
(define TxReady_o_12 ::(bitvector 1))
(define i_rx_phy_byte_err_12 ::(bitvector 1))
(define i_rx_phy_bit_cnt_12 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_12 ::(bitvector 1))
(define i_rx_phy_shift_en_12 ::(bitvector 1))
(define i_rx_phy_sync_err_12 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_12 ::(bitvector 2))
(define i_rx_phy_dpll_state_12 ::(bitvector 2))
(define i_rx_phy_fs_ce_12 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_12 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_12 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_12 ::(bitvector 1))
(define i_rx_phy_fs_next_state_12 ::(bitvector 3))
(define i_rx_phy_fs_state_12 ::(bitvector 3))
(define i_rx_phy_hold_reg_12 ::(bitvector 8))
(define i_rx_phy_one_cnt_12 ::(bitvector 3))
(define i_rx_phy_rx_active_12 ::(bitvector 1))
(define i_rx_phy_rx_en_12 ::(bitvector 1))
(define i_rx_phy_rx_valid_12 ::(bitvector 1))
(define i_rx_phy_rx_valid1_12 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_12 ::(bitvector 1))
(define i_rx_phy_rxd_r_12 ::(bitvector 1))
(define i_rx_phy_rxd_s_12 ::(bitvector 1))
(define i_rx_phy_rxd_s0_12 ::(bitvector 1))
(define i_rx_phy_rxd_s1_12 ::(bitvector 1))
(define i_rx_phy_rxdn_s_12 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_12 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_12 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_12 ::(bitvector 1))
(define i_rx_phy_rxdp_s_12 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_12 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_12 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_12 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_12 ::(bitvector 1))
(define i_rx_phy_sd_r_12 ::(bitvector 1))
(define i_rx_phy_se0_r_12 ::(bitvector 1))
(define i_rx_phy_se0_s_12 ::(bitvector 1))
(define i_rx_phy_sync_err_d_12 ::(bitvector 1))
(define i_rx_phy_synced_d_12 ::(bitvector 1))
(define i_tx_phy_TxReady_o_12 ::(bitvector 1))
(define i_tx_phy_append_eop_12 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_12 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_12 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_12 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_12 ::(bitvector 1))
(define i_tx_phy_bit_cnt_12 ::(bitvector 3))
(define i_tx_phy_data_done_12 ::(bitvector 1))
(define i_tx_phy_hold_reg_12 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_12 ::(bitvector 8))
(define i_tx_phy_ld_data_12 ::(bitvector 1))
(define i_tx_phy_ld_data_d_12 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_12 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_12 ::(bitvector 1))
(define i_tx_phy_next_state_12 ::(bitvector 3))
(define i_tx_phy_one_cnt_12 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_12 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_12 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_12 ::(bitvector 1))
(define i_tx_phy_sft_done_12 ::(bitvector 1))
(define i_tx_phy_sft_done_r_12 ::(bitvector 1))
(define i_tx_phy_state_12 ::(bitvector 3))
(define i_tx_phy_stuff_12 ::(bitvector 1))
(define i_tx_phy_tx_ip_12 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_12 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_12 ::(bitvector 1))
(define i_tx_phy_txdn_12 ::(bitvector 1))
(define i_tx_phy_txdp_12 ::(bitvector 1))
(define i_tx_phy_txoe_12 ::(bitvector 1))
(define i_tx_phy_txoe_r1_12 ::(bitvector 1))
(define i_tx_phy_txoe_r2_12 ::(bitvector 1))
(define rst_cnt_12 ::(bitvector 5))
(define txdn_12 ::(bitvector 1))
(define txdp_12 ::(bitvector 1))
(define txoe_12 ::(bitvector 1))
(define usb_rst_12 ::(bitvector 1))
(define DataOut_i_12 ::(bitvector 8))
(define TxValid_i_12 ::(bitvector 1))
(define clk_12 ::(bitvector 1))
(define phy_tx_mode_12 ::(bitvector 1))
(define rst_12 ::(bitvector 1))
(define rxd_12 ::(bitvector 1))
(define rxdn_12 ::(bitvector 1))
(define rxdp_12 ::(bitvector 1))
(define DataIn_o_13 ::(bitvector 8))
(define LineState_o_13 ::(bitvector 2))
(define RxActive_o_13 ::(bitvector 1))
(define RxError_o_13 ::(bitvector 1))
(define RxValid_o_13 ::(bitvector 1))
(define TxReady_o_13 ::(bitvector 1))
(define i_rx_phy_byte_err_13 ::(bitvector 1))
(define i_rx_phy_bit_cnt_13 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_13 ::(bitvector 1))
(define i_rx_phy_shift_en_13 ::(bitvector 1))
(define i_rx_phy_sync_err_13 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_13 ::(bitvector 2))
(define i_rx_phy_dpll_state_13 ::(bitvector 2))
(define i_rx_phy_fs_ce_13 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_13 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_13 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_13 ::(bitvector 1))
(define i_rx_phy_fs_next_state_13 ::(bitvector 3))
(define i_rx_phy_fs_state_13 ::(bitvector 3))
(define i_rx_phy_hold_reg_13 ::(bitvector 8))
(define i_rx_phy_one_cnt_13 ::(bitvector 3))
(define i_rx_phy_rx_active_13 ::(bitvector 1))
(define i_rx_phy_rx_en_13 ::(bitvector 1))
(define i_rx_phy_rx_valid_13 ::(bitvector 1))
(define i_rx_phy_rx_valid1_13 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_13 ::(bitvector 1))
(define i_rx_phy_rxd_r_13 ::(bitvector 1))
(define i_rx_phy_rxd_s_13 ::(bitvector 1))
(define i_rx_phy_rxd_s0_13 ::(bitvector 1))
(define i_rx_phy_rxd_s1_13 ::(bitvector 1))
(define i_rx_phy_rxdn_s_13 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_13 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_13 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_13 ::(bitvector 1))
(define i_rx_phy_rxdp_s_13 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_13 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_13 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_13 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_13 ::(bitvector 1))
(define i_rx_phy_sd_r_13 ::(bitvector 1))
(define i_rx_phy_se0_r_13 ::(bitvector 1))
(define i_rx_phy_se0_s_13 ::(bitvector 1))
(define i_rx_phy_sync_err_d_13 ::(bitvector 1))
(define i_rx_phy_synced_d_13 ::(bitvector 1))
(define i_tx_phy_TxReady_o_13 ::(bitvector 1))
(define i_tx_phy_append_eop_13 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_13 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_13 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_13 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_13 ::(bitvector 1))
(define i_tx_phy_bit_cnt_13 ::(bitvector 3))
(define i_tx_phy_data_done_13 ::(bitvector 1))
(define i_tx_phy_hold_reg_13 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_13 ::(bitvector 8))
(define i_tx_phy_ld_data_13 ::(bitvector 1))
(define i_tx_phy_ld_data_d_13 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_13 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_13 ::(bitvector 1))
(define i_tx_phy_next_state_13 ::(bitvector 3))
(define i_tx_phy_one_cnt_13 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_13 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_13 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_13 ::(bitvector 1))
(define i_tx_phy_sft_done_13 ::(bitvector 1))
(define i_tx_phy_sft_done_r_13 ::(bitvector 1))
(define i_tx_phy_state_13 ::(bitvector 3))
(define i_tx_phy_stuff_13 ::(bitvector 1))
(define i_tx_phy_tx_ip_13 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_13 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_13 ::(bitvector 1))
(define i_tx_phy_txdn_13 ::(bitvector 1))
(define i_tx_phy_txdp_13 ::(bitvector 1))
(define i_tx_phy_txoe_13 ::(bitvector 1))
(define i_tx_phy_txoe_r1_13 ::(bitvector 1))
(define i_tx_phy_txoe_r2_13 ::(bitvector 1))
(define rst_cnt_13 ::(bitvector 5))
(define txdn_13 ::(bitvector 1))
(define txdp_13 ::(bitvector 1))
(define txoe_13 ::(bitvector 1))
(define usb_rst_13 ::(bitvector 1))
(define DataOut_i_13 ::(bitvector 8))
(define TxValid_i_13 ::(bitvector 1))
(define clk_13 ::(bitvector 1))
(define phy_tx_mode_13 ::(bitvector 1))
(define rst_13 ::(bitvector 1))
(define rxd_13 ::(bitvector 1))
(define rxdn_13 ::(bitvector 1))
(define rxdp_13 ::(bitvector 1))
(define DataIn_o_14 ::(bitvector 8))
(define LineState_o_14 ::(bitvector 2))
(define RxActive_o_14 ::(bitvector 1))
(define RxError_o_14 ::(bitvector 1))
(define RxValid_o_14 ::(bitvector 1))
(define TxReady_o_14 ::(bitvector 1))
(define i_rx_phy_byte_err_14 ::(bitvector 1))
(define i_rx_phy_bit_cnt_14 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_14 ::(bitvector 1))
(define i_rx_phy_shift_en_14 ::(bitvector 1))
(define i_rx_phy_sync_err_14 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_14 ::(bitvector 2))
(define i_rx_phy_dpll_state_14 ::(bitvector 2))
(define i_rx_phy_fs_ce_14 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_14 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_14 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_14 ::(bitvector 1))
(define i_rx_phy_fs_next_state_14 ::(bitvector 3))
(define i_rx_phy_fs_state_14 ::(bitvector 3))
(define i_rx_phy_hold_reg_14 ::(bitvector 8))
(define i_rx_phy_one_cnt_14 ::(bitvector 3))
(define i_rx_phy_rx_active_14 ::(bitvector 1))
(define i_rx_phy_rx_en_14 ::(bitvector 1))
(define i_rx_phy_rx_valid_14 ::(bitvector 1))
(define i_rx_phy_rx_valid1_14 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_14 ::(bitvector 1))
(define i_rx_phy_rxd_r_14 ::(bitvector 1))
(define i_rx_phy_rxd_s_14 ::(bitvector 1))
(define i_rx_phy_rxd_s0_14 ::(bitvector 1))
(define i_rx_phy_rxd_s1_14 ::(bitvector 1))
(define i_rx_phy_rxdn_s_14 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_14 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_14 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_14 ::(bitvector 1))
(define i_rx_phy_rxdp_s_14 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_14 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_14 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_14 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_14 ::(bitvector 1))
(define i_rx_phy_sd_r_14 ::(bitvector 1))
(define i_rx_phy_se0_r_14 ::(bitvector 1))
(define i_rx_phy_se0_s_14 ::(bitvector 1))
(define i_rx_phy_sync_err_d_14 ::(bitvector 1))
(define i_rx_phy_synced_d_14 ::(bitvector 1))
(define i_tx_phy_TxReady_o_14 ::(bitvector 1))
(define i_tx_phy_append_eop_14 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_14 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_14 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_14 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_14 ::(bitvector 1))
(define i_tx_phy_bit_cnt_14 ::(bitvector 3))
(define i_tx_phy_data_done_14 ::(bitvector 1))
(define i_tx_phy_hold_reg_14 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_14 ::(bitvector 8))
(define i_tx_phy_ld_data_14 ::(bitvector 1))
(define i_tx_phy_ld_data_d_14 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_14 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_14 ::(bitvector 1))
(define i_tx_phy_next_state_14 ::(bitvector 3))
(define i_tx_phy_one_cnt_14 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_14 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_14 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_14 ::(bitvector 1))
(define i_tx_phy_sft_done_14 ::(bitvector 1))
(define i_tx_phy_sft_done_r_14 ::(bitvector 1))
(define i_tx_phy_state_14 ::(bitvector 3))
(define i_tx_phy_stuff_14 ::(bitvector 1))
(define i_tx_phy_tx_ip_14 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_14 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_14 ::(bitvector 1))
(define i_tx_phy_txdn_14 ::(bitvector 1))
(define i_tx_phy_txdp_14 ::(bitvector 1))
(define i_tx_phy_txoe_14 ::(bitvector 1))
(define i_tx_phy_txoe_r1_14 ::(bitvector 1))
(define i_tx_phy_txoe_r2_14 ::(bitvector 1))
(define rst_cnt_14 ::(bitvector 5))
(define txdn_14 ::(bitvector 1))
(define txdp_14 ::(bitvector 1))
(define txoe_14 ::(bitvector 1))
(define usb_rst_14 ::(bitvector 1))
(define DataOut_i_14 ::(bitvector 8))
(define TxValid_i_14 ::(bitvector 1))
(define clk_14 ::(bitvector 1))
(define phy_tx_mode_14 ::(bitvector 1))
(define rst_14 ::(bitvector 1))
(define rxd_14 ::(bitvector 1))
(define rxdn_14 ::(bitvector 1))
(define rxdp_14 ::(bitvector 1))
(define DataIn_o_15 ::(bitvector 8))
(define LineState_o_15 ::(bitvector 2))
(define RxActive_o_15 ::(bitvector 1))
(define RxError_o_15 ::(bitvector 1))
(define RxValid_o_15 ::(bitvector 1))
(define TxReady_o_15 ::(bitvector 1))
(define i_rx_phy_byte_err_15 ::(bitvector 1))
(define i_rx_phy_bit_cnt_15 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_15 ::(bitvector 1))
(define i_rx_phy_shift_en_15 ::(bitvector 1))
(define i_rx_phy_sync_err_15 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_15 ::(bitvector 2))
(define i_rx_phy_dpll_state_15 ::(bitvector 2))
(define i_rx_phy_fs_ce_15 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_15 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_15 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_15 ::(bitvector 1))
(define i_rx_phy_fs_next_state_15 ::(bitvector 3))
(define i_rx_phy_fs_state_15 ::(bitvector 3))
(define i_rx_phy_hold_reg_15 ::(bitvector 8))
(define i_rx_phy_one_cnt_15 ::(bitvector 3))
(define i_rx_phy_rx_active_15 ::(bitvector 1))
(define i_rx_phy_rx_en_15 ::(bitvector 1))
(define i_rx_phy_rx_valid_15 ::(bitvector 1))
(define i_rx_phy_rx_valid1_15 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_15 ::(bitvector 1))
(define i_rx_phy_rxd_r_15 ::(bitvector 1))
(define i_rx_phy_rxd_s_15 ::(bitvector 1))
(define i_rx_phy_rxd_s0_15 ::(bitvector 1))
(define i_rx_phy_rxd_s1_15 ::(bitvector 1))
(define i_rx_phy_rxdn_s_15 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_15 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_15 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_15 ::(bitvector 1))
(define i_rx_phy_rxdp_s_15 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_15 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_15 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_15 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_15 ::(bitvector 1))
(define i_rx_phy_sd_r_15 ::(bitvector 1))
(define i_rx_phy_se0_r_15 ::(bitvector 1))
(define i_rx_phy_se0_s_15 ::(bitvector 1))
(define i_rx_phy_sync_err_d_15 ::(bitvector 1))
(define i_rx_phy_synced_d_15 ::(bitvector 1))
(define i_tx_phy_TxReady_o_15 ::(bitvector 1))
(define i_tx_phy_append_eop_15 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_15 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_15 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_15 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_15 ::(bitvector 1))
(define i_tx_phy_bit_cnt_15 ::(bitvector 3))
(define i_tx_phy_data_done_15 ::(bitvector 1))
(define i_tx_phy_hold_reg_15 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_15 ::(bitvector 8))
(define i_tx_phy_ld_data_15 ::(bitvector 1))
(define i_tx_phy_ld_data_d_15 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_15 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_15 ::(bitvector 1))
(define i_tx_phy_next_state_15 ::(bitvector 3))
(define i_tx_phy_one_cnt_15 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_15 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_15 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_15 ::(bitvector 1))
(define i_tx_phy_sft_done_15 ::(bitvector 1))
(define i_tx_phy_sft_done_r_15 ::(bitvector 1))
(define i_tx_phy_state_15 ::(bitvector 3))
(define i_tx_phy_stuff_15 ::(bitvector 1))
(define i_tx_phy_tx_ip_15 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_15 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_15 ::(bitvector 1))
(define i_tx_phy_txdn_15 ::(bitvector 1))
(define i_tx_phy_txdp_15 ::(bitvector 1))
(define i_tx_phy_txoe_15 ::(bitvector 1))
(define i_tx_phy_txoe_r1_15 ::(bitvector 1))
(define i_tx_phy_txoe_r2_15 ::(bitvector 1))
(define rst_cnt_15 ::(bitvector 5))
(define txdn_15 ::(bitvector 1))
(define txdp_15 ::(bitvector 1))
(define txoe_15 ::(bitvector 1))
(define usb_rst_15 ::(bitvector 1))
(define DataOut_i_15 ::(bitvector 8))
(define TxValid_i_15 ::(bitvector 1))
(define clk_15 ::(bitvector 1))
(define phy_tx_mode_15 ::(bitvector 1))
(define rst_15 ::(bitvector 1))
(define rxd_15 ::(bitvector 1))
(define rxdn_15 ::(bitvector 1))
(define rxdp_15 ::(bitvector 1))
(define DataIn_o_16 ::(bitvector 8))
(define LineState_o_16 ::(bitvector 2))
(define RxActive_o_16 ::(bitvector 1))
(define RxError_o_16 ::(bitvector 1))
(define RxValid_o_16 ::(bitvector 1))
(define TxReady_o_16 ::(bitvector 1))
(define i_rx_phy_byte_err_16 ::(bitvector 1))
(define i_rx_phy_bit_cnt_16 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_16 ::(bitvector 1))
(define i_rx_phy_shift_en_16 ::(bitvector 1))
(define i_rx_phy_sync_err_16 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_16 ::(bitvector 2))
(define i_rx_phy_dpll_state_16 ::(bitvector 2))
(define i_rx_phy_fs_ce_16 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_16 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_16 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_16 ::(bitvector 1))
(define i_rx_phy_fs_next_state_16 ::(bitvector 3))
(define i_rx_phy_fs_state_16 ::(bitvector 3))
(define i_rx_phy_hold_reg_16 ::(bitvector 8))
(define i_rx_phy_one_cnt_16 ::(bitvector 3))
(define i_rx_phy_rx_active_16 ::(bitvector 1))
(define i_rx_phy_rx_en_16 ::(bitvector 1))
(define i_rx_phy_rx_valid_16 ::(bitvector 1))
(define i_rx_phy_rx_valid1_16 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_16 ::(bitvector 1))
(define i_rx_phy_rxd_r_16 ::(bitvector 1))
(define i_rx_phy_rxd_s_16 ::(bitvector 1))
(define i_rx_phy_rxd_s0_16 ::(bitvector 1))
(define i_rx_phy_rxd_s1_16 ::(bitvector 1))
(define i_rx_phy_rxdn_s_16 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_16 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_16 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_16 ::(bitvector 1))
(define i_rx_phy_rxdp_s_16 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_16 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_16 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_16 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_16 ::(bitvector 1))
(define i_rx_phy_sd_r_16 ::(bitvector 1))
(define i_rx_phy_se0_r_16 ::(bitvector 1))
(define i_rx_phy_se0_s_16 ::(bitvector 1))
(define i_rx_phy_sync_err_d_16 ::(bitvector 1))
(define i_rx_phy_synced_d_16 ::(bitvector 1))
(define i_tx_phy_TxReady_o_16 ::(bitvector 1))
(define i_tx_phy_append_eop_16 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_16 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_16 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_16 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_16 ::(bitvector 1))
(define i_tx_phy_bit_cnt_16 ::(bitvector 3))
(define i_tx_phy_data_done_16 ::(bitvector 1))
(define i_tx_phy_hold_reg_16 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_16 ::(bitvector 8))
(define i_tx_phy_ld_data_16 ::(bitvector 1))
(define i_tx_phy_ld_data_d_16 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_16 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_16 ::(bitvector 1))
(define i_tx_phy_next_state_16 ::(bitvector 3))
(define i_tx_phy_one_cnt_16 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_16 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_16 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_16 ::(bitvector 1))
(define i_tx_phy_sft_done_16 ::(bitvector 1))
(define i_tx_phy_sft_done_r_16 ::(bitvector 1))
(define i_tx_phy_state_16 ::(bitvector 3))
(define i_tx_phy_stuff_16 ::(bitvector 1))
(define i_tx_phy_tx_ip_16 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_16 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_16 ::(bitvector 1))
(define i_tx_phy_txdn_16 ::(bitvector 1))
(define i_tx_phy_txdp_16 ::(bitvector 1))
(define i_tx_phy_txoe_16 ::(bitvector 1))
(define i_tx_phy_txoe_r1_16 ::(bitvector 1))
(define i_tx_phy_txoe_r2_16 ::(bitvector 1))
(define rst_cnt_16 ::(bitvector 5))
(define txdn_16 ::(bitvector 1))
(define txdp_16 ::(bitvector 1))
(define txoe_16 ::(bitvector 1))
(define usb_rst_16 ::(bitvector 1))
(define DataOut_i_16 ::(bitvector 8))
(define TxValid_i_16 ::(bitvector 1))
(define clk_16 ::(bitvector 1))
(define phy_tx_mode_16 ::(bitvector 1))
(define rst_16 ::(bitvector 1))
(define rxd_16 ::(bitvector 1))
(define rxdn_16 ::(bitvector 1))
(define rxdp_16 ::(bitvector 1))
(define DataIn_o_17 ::(bitvector 8))
(define LineState_o_17 ::(bitvector 2))
(define RxActive_o_17 ::(bitvector 1))
(define RxError_o_17 ::(bitvector 1))
(define RxValid_o_17 ::(bitvector 1))
(define TxReady_o_17 ::(bitvector 1))
(define i_rx_phy_byte_err_17 ::(bitvector 1))
(define i_rx_phy_bit_cnt_17 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_17 ::(bitvector 1))
(define i_rx_phy_shift_en_17 ::(bitvector 1))
(define i_rx_phy_sync_err_17 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_17 ::(bitvector 2))
(define i_rx_phy_dpll_state_17 ::(bitvector 2))
(define i_rx_phy_fs_ce_17 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_17 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_17 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_17 ::(bitvector 1))
(define i_rx_phy_fs_next_state_17 ::(bitvector 3))
(define i_rx_phy_fs_state_17 ::(bitvector 3))
(define i_rx_phy_hold_reg_17 ::(bitvector 8))
(define i_rx_phy_one_cnt_17 ::(bitvector 3))
(define i_rx_phy_rx_active_17 ::(bitvector 1))
(define i_rx_phy_rx_en_17 ::(bitvector 1))
(define i_rx_phy_rx_valid_17 ::(bitvector 1))
(define i_rx_phy_rx_valid1_17 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_17 ::(bitvector 1))
(define i_rx_phy_rxd_r_17 ::(bitvector 1))
(define i_rx_phy_rxd_s_17 ::(bitvector 1))
(define i_rx_phy_rxd_s0_17 ::(bitvector 1))
(define i_rx_phy_rxd_s1_17 ::(bitvector 1))
(define i_rx_phy_rxdn_s_17 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_17 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_17 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_17 ::(bitvector 1))
(define i_rx_phy_rxdp_s_17 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_17 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_17 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_17 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_17 ::(bitvector 1))
(define i_rx_phy_sd_r_17 ::(bitvector 1))
(define i_rx_phy_se0_r_17 ::(bitvector 1))
(define i_rx_phy_se0_s_17 ::(bitvector 1))
(define i_rx_phy_sync_err_d_17 ::(bitvector 1))
(define i_rx_phy_synced_d_17 ::(bitvector 1))
(define i_tx_phy_TxReady_o_17 ::(bitvector 1))
(define i_tx_phy_append_eop_17 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_17 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_17 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_17 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_17 ::(bitvector 1))
(define i_tx_phy_bit_cnt_17 ::(bitvector 3))
(define i_tx_phy_data_done_17 ::(bitvector 1))
(define i_tx_phy_hold_reg_17 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_17 ::(bitvector 8))
(define i_tx_phy_ld_data_17 ::(bitvector 1))
(define i_tx_phy_ld_data_d_17 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_17 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_17 ::(bitvector 1))
(define i_tx_phy_next_state_17 ::(bitvector 3))
(define i_tx_phy_one_cnt_17 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_17 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_17 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_17 ::(bitvector 1))
(define i_tx_phy_sft_done_17 ::(bitvector 1))
(define i_tx_phy_sft_done_r_17 ::(bitvector 1))
(define i_tx_phy_state_17 ::(bitvector 3))
(define i_tx_phy_stuff_17 ::(bitvector 1))
(define i_tx_phy_tx_ip_17 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_17 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_17 ::(bitvector 1))
(define i_tx_phy_txdn_17 ::(bitvector 1))
(define i_tx_phy_txdp_17 ::(bitvector 1))
(define i_tx_phy_txoe_17 ::(bitvector 1))
(define i_tx_phy_txoe_r1_17 ::(bitvector 1))
(define i_tx_phy_txoe_r2_17 ::(bitvector 1))
(define rst_cnt_17 ::(bitvector 5))
(define txdn_17 ::(bitvector 1))
(define txdp_17 ::(bitvector 1))
(define txoe_17 ::(bitvector 1))
(define usb_rst_17 ::(bitvector 1))
(define DataOut_i_17 ::(bitvector 8))
(define TxValid_i_17 ::(bitvector 1))
(define clk_17 ::(bitvector 1))
(define phy_tx_mode_17 ::(bitvector 1))
(define rst_17 ::(bitvector 1))
(define rxd_17 ::(bitvector 1))
(define rxdn_17 ::(bitvector 1))
(define rxdp_17 ::(bitvector 1))
(define DataIn_o_18 ::(bitvector 8))
(define LineState_o_18 ::(bitvector 2))
(define RxActive_o_18 ::(bitvector 1))
(define RxError_o_18 ::(bitvector 1))
(define RxValid_o_18 ::(bitvector 1))
(define TxReady_o_18 ::(bitvector 1))
(define i_rx_phy_byte_err_18 ::(bitvector 1))
(define i_rx_phy_bit_cnt_18 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_18 ::(bitvector 1))
(define i_rx_phy_shift_en_18 ::(bitvector 1))
(define i_rx_phy_sync_err_18 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_18 ::(bitvector 2))
(define i_rx_phy_dpll_state_18 ::(bitvector 2))
(define i_rx_phy_fs_ce_18 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_18 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_18 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_18 ::(bitvector 1))
(define i_rx_phy_fs_next_state_18 ::(bitvector 3))
(define i_rx_phy_fs_state_18 ::(bitvector 3))
(define i_rx_phy_hold_reg_18 ::(bitvector 8))
(define i_rx_phy_one_cnt_18 ::(bitvector 3))
(define i_rx_phy_rx_active_18 ::(bitvector 1))
(define i_rx_phy_rx_en_18 ::(bitvector 1))
(define i_rx_phy_rx_valid_18 ::(bitvector 1))
(define i_rx_phy_rx_valid1_18 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_18 ::(bitvector 1))
(define i_rx_phy_rxd_r_18 ::(bitvector 1))
(define i_rx_phy_rxd_s_18 ::(bitvector 1))
(define i_rx_phy_rxd_s0_18 ::(bitvector 1))
(define i_rx_phy_rxd_s1_18 ::(bitvector 1))
(define i_rx_phy_rxdn_s_18 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_18 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_18 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_18 ::(bitvector 1))
(define i_rx_phy_rxdp_s_18 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_18 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_18 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_18 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_18 ::(bitvector 1))
(define i_rx_phy_sd_r_18 ::(bitvector 1))
(define i_rx_phy_se0_r_18 ::(bitvector 1))
(define i_rx_phy_se0_s_18 ::(bitvector 1))
(define i_rx_phy_sync_err_d_18 ::(bitvector 1))
(define i_rx_phy_synced_d_18 ::(bitvector 1))
(define i_tx_phy_TxReady_o_18 ::(bitvector 1))
(define i_tx_phy_append_eop_18 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_18 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_18 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_18 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_18 ::(bitvector 1))
(define i_tx_phy_bit_cnt_18 ::(bitvector 3))
(define i_tx_phy_data_done_18 ::(bitvector 1))
(define i_tx_phy_hold_reg_18 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_18 ::(bitvector 8))
(define i_tx_phy_ld_data_18 ::(bitvector 1))
(define i_tx_phy_ld_data_d_18 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_18 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_18 ::(bitvector 1))
(define i_tx_phy_next_state_18 ::(bitvector 3))
(define i_tx_phy_one_cnt_18 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_18 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_18 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_18 ::(bitvector 1))
(define i_tx_phy_sft_done_18 ::(bitvector 1))
(define i_tx_phy_sft_done_r_18 ::(bitvector 1))
(define i_tx_phy_state_18 ::(bitvector 3))
(define i_tx_phy_stuff_18 ::(bitvector 1))
(define i_tx_phy_tx_ip_18 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_18 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_18 ::(bitvector 1))
(define i_tx_phy_txdn_18 ::(bitvector 1))
(define i_tx_phy_txdp_18 ::(bitvector 1))
(define i_tx_phy_txoe_18 ::(bitvector 1))
(define i_tx_phy_txoe_r1_18 ::(bitvector 1))
(define i_tx_phy_txoe_r2_18 ::(bitvector 1))
(define rst_cnt_18 ::(bitvector 5))
(define txdn_18 ::(bitvector 1))
(define txdp_18 ::(bitvector 1))
(define txoe_18 ::(bitvector 1))
(define usb_rst_18 ::(bitvector 1))
(define DataOut_i_18 ::(bitvector 8))
(define TxValid_i_18 ::(bitvector 1))
(define clk_18 ::(bitvector 1))
(define phy_tx_mode_18 ::(bitvector 1))
(define rst_18 ::(bitvector 1))
(define rxd_18 ::(bitvector 1))
(define rxdn_18 ::(bitvector 1))
(define rxdp_18 ::(bitvector 1))
(define DataIn_o_19 ::(bitvector 8))
(define LineState_o_19 ::(bitvector 2))
(define RxActive_o_19 ::(bitvector 1))
(define RxError_o_19 ::(bitvector 1))
(define RxValid_o_19 ::(bitvector 1))
(define TxReady_o_19 ::(bitvector 1))
(define i_rx_phy_byte_err_19 ::(bitvector 1))
(define i_rx_phy_bit_cnt_19 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_19 ::(bitvector 1))
(define i_rx_phy_shift_en_19 ::(bitvector 1))
(define i_rx_phy_sync_err_19 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_19 ::(bitvector 2))
(define i_rx_phy_dpll_state_19 ::(bitvector 2))
(define i_rx_phy_fs_ce_19 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_19 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_19 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_19 ::(bitvector 1))
(define i_rx_phy_fs_next_state_19 ::(bitvector 3))
(define i_rx_phy_fs_state_19 ::(bitvector 3))
(define i_rx_phy_hold_reg_19 ::(bitvector 8))
(define i_rx_phy_one_cnt_19 ::(bitvector 3))
(define i_rx_phy_rx_active_19 ::(bitvector 1))
(define i_rx_phy_rx_en_19 ::(bitvector 1))
(define i_rx_phy_rx_valid_19 ::(bitvector 1))
(define i_rx_phy_rx_valid1_19 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_19 ::(bitvector 1))
(define i_rx_phy_rxd_r_19 ::(bitvector 1))
(define i_rx_phy_rxd_s_19 ::(bitvector 1))
(define i_rx_phy_rxd_s0_19 ::(bitvector 1))
(define i_rx_phy_rxd_s1_19 ::(bitvector 1))
(define i_rx_phy_rxdn_s_19 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_19 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_19 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_19 ::(bitvector 1))
(define i_rx_phy_rxdp_s_19 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_19 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_19 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_19 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_19 ::(bitvector 1))
(define i_rx_phy_sd_r_19 ::(bitvector 1))
(define i_rx_phy_se0_r_19 ::(bitvector 1))
(define i_rx_phy_se0_s_19 ::(bitvector 1))
(define i_rx_phy_sync_err_d_19 ::(bitvector 1))
(define i_rx_phy_synced_d_19 ::(bitvector 1))
(define i_tx_phy_TxReady_o_19 ::(bitvector 1))
(define i_tx_phy_append_eop_19 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_19 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_19 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_19 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_19 ::(bitvector 1))
(define i_tx_phy_bit_cnt_19 ::(bitvector 3))
(define i_tx_phy_data_done_19 ::(bitvector 1))
(define i_tx_phy_hold_reg_19 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_19 ::(bitvector 8))
(define i_tx_phy_ld_data_19 ::(bitvector 1))
(define i_tx_phy_ld_data_d_19 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_19 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_19 ::(bitvector 1))
(define i_tx_phy_next_state_19 ::(bitvector 3))
(define i_tx_phy_one_cnt_19 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_19 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_19 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_19 ::(bitvector 1))
(define i_tx_phy_sft_done_19 ::(bitvector 1))
(define i_tx_phy_sft_done_r_19 ::(bitvector 1))
(define i_tx_phy_state_19 ::(bitvector 3))
(define i_tx_phy_stuff_19 ::(bitvector 1))
(define i_tx_phy_tx_ip_19 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_19 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_19 ::(bitvector 1))
(define i_tx_phy_txdn_19 ::(bitvector 1))
(define i_tx_phy_txdp_19 ::(bitvector 1))
(define i_tx_phy_txoe_19 ::(bitvector 1))
(define i_tx_phy_txoe_r1_19 ::(bitvector 1))
(define i_tx_phy_txoe_r2_19 ::(bitvector 1))
(define rst_cnt_19 ::(bitvector 5))
(define txdn_19 ::(bitvector 1))
(define txdp_19 ::(bitvector 1))
(define txoe_19 ::(bitvector 1))
(define usb_rst_19 ::(bitvector 1))
(define DataOut_i_19 ::(bitvector 8))
(define TxValid_i_19 ::(bitvector 1))
(define clk_19 ::(bitvector 1))
(define phy_tx_mode_19 ::(bitvector 1))
(define rst_19 ::(bitvector 1))
(define rxd_19 ::(bitvector 1))
(define rxdn_19 ::(bitvector 1))
(define rxdp_19 ::(bitvector 1))
(define DataIn_o_20 ::(bitvector 8))
(define LineState_o_20 ::(bitvector 2))
(define RxActive_o_20 ::(bitvector 1))
(define RxError_o_20 ::(bitvector 1))
(define RxValid_o_20 ::(bitvector 1))
(define TxReady_o_20 ::(bitvector 1))
(define i_rx_phy_byte_err_20 ::(bitvector 1))
(define i_rx_phy_bit_cnt_20 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_20 ::(bitvector 1))
(define i_rx_phy_shift_en_20 ::(bitvector 1))
(define i_rx_phy_sync_err_20 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_20 ::(bitvector 2))
(define i_rx_phy_dpll_state_20 ::(bitvector 2))
(define i_rx_phy_fs_ce_20 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_20 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_20 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_20 ::(bitvector 1))
(define i_rx_phy_fs_next_state_20 ::(bitvector 3))
(define i_rx_phy_fs_state_20 ::(bitvector 3))
(define i_rx_phy_hold_reg_20 ::(bitvector 8))
(define i_rx_phy_one_cnt_20 ::(bitvector 3))
(define i_rx_phy_rx_active_20 ::(bitvector 1))
(define i_rx_phy_rx_en_20 ::(bitvector 1))
(define i_rx_phy_rx_valid_20 ::(bitvector 1))
(define i_rx_phy_rx_valid1_20 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_20 ::(bitvector 1))
(define i_rx_phy_rxd_r_20 ::(bitvector 1))
(define i_rx_phy_rxd_s_20 ::(bitvector 1))
(define i_rx_phy_rxd_s0_20 ::(bitvector 1))
(define i_rx_phy_rxd_s1_20 ::(bitvector 1))
(define i_rx_phy_rxdn_s_20 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_20 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_20 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_20 ::(bitvector 1))
(define i_rx_phy_rxdp_s_20 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_20 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_20 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_20 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_20 ::(bitvector 1))
(define i_rx_phy_sd_r_20 ::(bitvector 1))
(define i_rx_phy_se0_r_20 ::(bitvector 1))
(define i_rx_phy_se0_s_20 ::(bitvector 1))
(define i_rx_phy_sync_err_d_20 ::(bitvector 1))
(define i_rx_phy_synced_d_20 ::(bitvector 1))
(define i_tx_phy_TxReady_o_20 ::(bitvector 1))
(define i_tx_phy_append_eop_20 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_20 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_20 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_20 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_20 ::(bitvector 1))
(define i_tx_phy_bit_cnt_20 ::(bitvector 3))
(define i_tx_phy_data_done_20 ::(bitvector 1))
(define i_tx_phy_hold_reg_20 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_20 ::(bitvector 8))
(define i_tx_phy_ld_data_20 ::(bitvector 1))
(define i_tx_phy_ld_data_d_20 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_20 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_20 ::(bitvector 1))
(define i_tx_phy_next_state_20 ::(bitvector 3))
(define i_tx_phy_one_cnt_20 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_20 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_20 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_20 ::(bitvector 1))
(define i_tx_phy_sft_done_20 ::(bitvector 1))
(define i_tx_phy_sft_done_r_20 ::(bitvector 1))
(define i_tx_phy_state_20 ::(bitvector 3))
(define i_tx_phy_stuff_20 ::(bitvector 1))
(define i_tx_phy_tx_ip_20 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_20 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_20 ::(bitvector 1))
(define i_tx_phy_txdn_20 ::(bitvector 1))
(define i_tx_phy_txdp_20 ::(bitvector 1))
(define i_tx_phy_txoe_20 ::(bitvector 1))
(define i_tx_phy_txoe_r1_20 ::(bitvector 1))
(define i_tx_phy_txoe_r2_20 ::(bitvector 1))
(define rst_cnt_20 ::(bitvector 5))
(define txdn_20 ::(bitvector 1))
(define txdp_20 ::(bitvector 1))
(define txoe_20 ::(bitvector 1))
(define usb_rst_20 ::(bitvector 1))
(define DataOut_i_20 ::(bitvector 8))
(define TxValid_i_20 ::(bitvector 1))
(define clk_20 ::(bitvector 1))
(define phy_tx_mode_20 ::(bitvector 1))
(define rst_20 ::(bitvector 1))
(define rxd_20 ::(bitvector 1))
(define rxdn_20 ::(bitvector 1))
(define rxdp_20 ::(bitvector 1))
(define DataIn_o_21 ::(bitvector 8))
(define LineState_o_21 ::(bitvector 2))
(define RxActive_o_21 ::(bitvector 1))
(define RxError_o_21 ::(bitvector 1))
(define RxValid_o_21 ::(bitvector 1))
(define TxReady_o_21 ::(bitvector 1))
(define i_rx_phy_byte_err_21 ::(bitvector 1))
(define i_rx_phy_bit_cnt_21 ::(bitvector 3))
(define i_rx_phy_bit_stuff_err_21 ::(bitvector 1))
(define i_rx_phy_shift_en_21 ::(bitvector 1))
(define i_rx_phy_sync_err_21 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_21 ::(bitvector 2))
(define i_rx_phy_dpll_state_21 ::(bitvector 2))
(define i_rx_phy_fs_ce_21 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_21 ::(bitvector 1))
(define i_rx_phy_fs_ce_r1_21 ::(bitvector 1))
(define i_rx_phy_fs_ce_r2_21 ::(bitvector 1))
(define i_rx_phy_fs_next_state_21 ::(bitvector 3))
(define i_rx_phy_fs_state_21 ::(bitvector 3))
(define i_rx_phy_hold_reg_21 ::(bitvector 8))
(define i_rx_phy_one_cnt_21 ::(bitvector 3))
(define i_rx_phy_rx_active_21 ::(bitvector 1))
(define i_rx_phy_rx_en_21 ::(bitvector 1))
(define i_rx_phy_rx_valid_21 ::(bitvector 1))
(define i_rx_phy_rx_valid1_21 ::(bitvector 1))
(define i_rx_phy_rx_valid_r_21 ::(bitvector 1))
(define i_rx_phy_rxd_r_21 ::(bitvector 1))
(define i_rx_phy_rxd_s_21 ::(bitvector 1))
(define i_rx_phy_rxd_s0_21 ::(bitvector 1))
(define i_rx_phy_rxd_s1_21 ::(bitvector 1))
(define i_rx_phy_rxdn_s_21 ::(bitvector 1))
(define i_rx_phy_rxdn_s0_21 ::(bitvector 1))
(define i_rx_phy_rxdn_s1_21 ::(bitvector 1))
(define i_rx_phy_rxdn_s_r_21 ::(bitvector 1))
(define i_rx_phy_rxdp_s_21 ::(bitvector 1))
(define i_rx_phy_rxdp_s0_21 ::(bitvector 1))
(define i_rx_phy_rxdp_s1_21 ::(bitvector 1))
(define i_rx_phy_rxdp_s_r_21 ::(bitvector 1))
(define i_rx_phy_sd_nrzi_21 ::(bitvector 1))
(define i_rx_phy_sd_r_21 ::(bitvector 1))
(define i_rx_phy_se0_r_21 ::(bitvector 1))
(define i_rx_phy_se0_s_21 ::(bitvector 1))
(define i_rx_phy_sync_err_d_21 ::(bitvector 1))
(define i_rx_phy_synced_d_21 ::(bitvector 1))
(define i_tx_phy_TxReady_o_21 ::(bitvector 1))
(define i_tx_phy_append_eop_21 ::(bitvector 1))
(define i_tx_phy_append_eop_sync1_21 ::(bitvector 1))
(define i_tx_phy_append_eop_sync2_21 ::(bitvector 1))
(define i_tx_phy_append_eop_sync3_21 ::(bitvector 1))
(define i_tx_phy_append_eop_sync4_21 ::(bitvector 1))
(define i_tx_phy_bit_cnt_21 ::(bitvector 3))
(define i_tx_phy_data_done_21 ::(bitvector 1))
(define i_tx_phy_hold_reg_21 ::(bitvector 8))
(define i_tx_phy_hold_reg_d_21 ::(bitvector 8))
(define i_tx_phy_ld_data_21 ::(bitvector 1))
(define i_tx_phy_ld_data_d_21 ::(bitvector 1))
(define i_tx_phy_ld_eop_d_21 ::(bitvector 1))
(define i_tx_phy_ld_sop_d_21 ::(bitvector 1))
(define i_tx_phy_next_state_21 ::(bitvector 3))
(define i_tx_phy_one_cnt_21 ::(bitvector 3))
(define i_tx_phy_sd_bs_o_21 ::(bitvector 1))
(define i_tx_phy_sd_nrzi_o_21 ::(bitvector 1))
(define i_tx_phy_sd_raw_o_21 ::(bitvector 1))
(define i_tx_phy_sft_done_21 ::(bitvector 1))
(define i_tx_phy_sft_done_r_21 ::(bitvector 1))
(define i_tx_phy_state_21 ::(bitvector 3))
(define i_tx_phy_stuff_21 ::(bitvector 1))
(define i_tx_phy_tx_ip_21 ::(bitvector 1))
(define i_tx_phy_tx_ip_sync_21 ::(bitvector 1))
(define i_tx_phy_tx_ready_d_21 ::(bitvector 1))
(define i_tx_phy_txdn_21 ::(bitvector 1))
(define i_tx_phy_txdp_21 ::(bitvector 1))
(define i_tx_phy_txoe_21 ::(bitvector 1))
(define i_tx_phy_txoe_r1_21 ::(bitvector 1))
(define i_tx_phy_txoe_r2_21 ::(bitvector 1))
(define rst_cnt_21 ::(bitvector 5))
(define txdn_21 ::(bitvector 1))
(define txdp_21 ::(bitvector 1))
(define txoe_21 ::(bitvector 1))
(define usb_rst_21 ::(bitvector 1))
(define DataOut_i_21 ::(bitvector 8))
(define TxValid_i_21 ::(bitvector 1))
(define clk_21 ::(bitvector 1))
(define phy_tx_mode_21 ::(bitvector 1))
(define rst_21 ::(bitvector 1))
(define rxd_21 ::(bitvector 1))
(define rxdn_21 ::(bitvector 1))
(define rxdp_21 ::(bitvector 1))
(assert (= DataIn_o_0 0b00000000))
(assert (= LineState_o_0 0b00))
(assert (= RxActive_o_0 0b0))
(assert (= RxError_o_0 0b0))
(assert (= RxValid_o_0 0b0))
(assert (= TxReady_o_0 0b0))
(assert (= i_rx_phy_byte_err_0 0b0))
(assert (= i_rx_phy_bit_cnt_0 0b000))
(assert (= i_rx_phy_bit_stuff_err_0 0b0))
(assert (= i_rx_phy_shift_en_0 0b0))
(assert (= i_rx_phy_sync_err_0 0b0))
(assert (= i_rx_phy_dpll_next_state_0 0b00))
(assert (= i_rx_phy_dpll_state_0 0b00))
(assert (= i_rx_phy_fs_ce_0 0b0))
(assert (= i_rx_phy_fs_ce_d_0 0b0))
(assert (= i_rx_phy_fs_ce_r1_0 0b0))
(assert (= i_rx_phy_fs_ce_r2_0 0b0))
(assert (= i_rx_phy_fs_next_state_0 0b000))
(assert (= i_rx_phy_fs_state_0 0b000))
(assert (= i_rx_phy_hold_reg_0 0b00000000))
(assert (= i_rx_phy_one_cnt_0 0b000))
(assert (= i_rx_phy_rx_active_0 0b0))
(assert (= i_rx_phy_rx_en_0 0b0))
(assert (= i_rx_phy_rx_valid_0 0b0))
(assert (= i_rx_phy_rx_valid1_0 0b0))
(assert (= i_rx_phy_rx_valid_r_0 0b0))
(assert (= i_rx_phy_rxd_r_0 0b0))
(assert (= i_rx_phy_rxd_s_0 0b0))
(assert (= i_rx_phy_rxd_s0_0 0b0))
(assert (= i_rx_phy_rxd_s1_0 0b0))
(assert (= i_rx_phy_rxdn_s_0 0b0))
(assert (= i_rx_phy_rxdn_s0_0 0b0))
(assert (= i_rx_phy_rxdn_s1_0 0b0))
(assert (= i_rx_phy_rxdn_s_r_0 0b0))
(assert (= i_rx_phy_rxdp_s_0 0b0))
(assert (= i_rx_phy_rxdp_s0_0 0b0))
(assert (= i_rx_phy_rxdp_s1_0 0b0))
(assert (= i_rx_phy_rxdp_s_r_0 0b0))
(assert (= i_rx_phy_sd_nrzi_0 0b0))
(assert (= i_rx_phy_sd_r_0 0b0))
(assert (= i_rx_phy_se0_r_0 0b0))
(assert (= i_rx_phy_se0_s_0 0b0))
(assert (= i_rx_phy_sync_err_d_0 0b0))
(assert (= i_rx_phy_synced_d_0 0b0))
(assert (= i_tx_phy_TxReady_o_0 0b0))
(assert (= i_tx_phy_append_eop_0 0b0))
(assert (= i_tx_phy_append_eop_sync1_0 0b0))
(assert (= i_tx_phy_append_eop_sync2_0 0b0))
(assert (= i_tx_phy_append_eop_sync3_0 0b0))
(assert (= i_tx_phy_append_eop_sync4_0 0b0))
(assert (= i_tx_phy_bit_cnt_0 0b000))
(assert (= i_tx_phy_data_done_0 0b0))
(assert (= i_tx_phy_hold_reg_0 0b00000000))
(assert (= i_tx_phy_hold_reg_d_0 0b00000000))
(assert (= i_tx_phy_ld_data_0 0b0))
(assert (= i_tx_phy_ld_data_d_0 0b0))
(assert (= i_tx_phy_ld_eop_d_0 0b0))
(assert (= i_tx_phy_ld_sop_d_0 0b0))
(assert (= i_tx_phy_next_state_0 0b000))
(assert (= i_tx_phy_one_cnt_0 0b000))
(assert (= i_tx_phy_sd_bs_o_0 0b0))
(assert (= i_tx_phy_sd_nrzi_o_0 0b0))
(assert (= i_tx_phy_sd_raw_o_0 0b0))
(assert (= i_tx_phy_sft_done_0 0b0))
(assert (= i_tx_phy_sft_done_r_0 0b0))
(assert (= i_tx_phy_state_0 0b000))
(assert (= i_tx_phy_stuff_0 0b0))
(assert (= i_tx_phy_tx_ip_0 0b0))
(assert (= i_tx_phy_tx_ip_sync_0 0b0))
(assert (= i_tx_phy_tx_ready_d_0 0b0))
(assert (= i_tx_phy_txdn_0 0b0))
(assert (= i_tx_phy_txdp_0 0b0))
(assert (= i_tx_phy_txoe_0 0b0))
(assert (= i_tx_phy_txoe_r1_0 0b0))
(assert (= i_tx_phy_txoe_r2_0 0b0))
(assert (= rst_cnt_0 0b00000))
(assert (= txdn_0 0b0))
(assert (= txdp_0 0b0))
(assert (= txoe_0 0b0))
(assert (= usb_rst_0 0b0))

(define i_rx_phy_fs_ce_d_22 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_23 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_24 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_25 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_26 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_27 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_28 ::(bitvector 1))
(define i_rx_phy_fs_ce_d_29 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_22 ::(bitvector 2))
(define i_rx_phy_fs_ce_d_30 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_23 ::(bitvector 2))
(define i_rx_phy_fs_ce_d_31 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_24 ::(bitvector 2))
(define i_rx_phy_fs_ce_d_32 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_25 ::(bitvector 2))
(define i_rx_phy_fs_ce_d_33 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_26 ::(bitvector 2))
(define i_rx_phy_fs_ce_d_34 ::(bitvector 1))
(define i_rx_phy_dpll_next_state_27 ::(bitvector 2))
