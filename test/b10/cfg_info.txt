/*
[1] weight: 1 distance: 7
[S] 2 3
[P] 4

[2] weight: 0 distance: 6
(assert (= (bv-comp #reset  0b1)   0b1)) ;0 BR
(assert (= @stato    0b0000)) ;2 NB
(assert (= @voto0    0b0)) ;3 NB
(assert (= @voto1    0b0)) ;4 NB
(assert (= @voto2    0b0)) ;5 NB
(assert (= @voto3    0b0)) ;6 NB
(assert (= @sign    0b0000)) ;7 NB
(assert (= @last_g    0b0)) ;8 NB
(assert (= @last_r    0b0)) ;9 NB
(assert (= @cts    0b0)) ;10 NB
(assert (= @ctr    0b0)) ;11 NB
(assert (= @v_out    0b0000)) ;12 NB
[S] 4
[P] 1

[3] weight: 1 distance: 268435455
(assert (= (bv-comp #reset  0b1)   0b0)) ;1 BR
[S] 6 10 20 33 34 41 45 49 53 57 61
[P] 1

[4] weight: 0 distance: 7
[P] 2 5

[5] weight: 0 distance: 7
[S] 4
[P] 9 19 23 33 37 44 48 52 56 60 61

[6] weight: 1 distance: 6
(assert (= #stato    0b0000)) ;13 CS
(assert (= @voto0    0b0)) ;14 NB
(assert (= @voto1    0b0)) ;15 NB
(assert (= @voto2    0b0)) ;16 NB
(assert (= @voto3    0b0)) ;17 NB
(assert (= @cts    0b0)) ;18 NB
(assert (= @ctr    0b0)) ;19 NB
[S] 7 8
[P] 2

[7] weight: 0 distance: 7
(assert (= (bv-comp #test  0b0)   0b1)) ;20 BR
(assert (= @sign    0b0000)) ;22 NB
(assert (= @stato    0b1001)) ;23 NB
[S] 9
[P] 6

[8] weight: 0 distance: 5
(assert (= (bv-comp #test  0b0)   0b0)) ;21 BR
(assert (= @voto0    0b0)) ;24 NB
(assert (= @voto1    0b0)) ;25 NB
(assert (= @voto2    0b0)) ;26 NB
(assert (= @voto3    0b0)) ;27 NB
(assert (= @stato    0b0001)) ;28 NB
[S] 9
[P] 6

[9] weight: 0 distance: 7
[S] 5
[P] 7 8

[10] weight: 1 distance: 5
(assert (= #stato    0b0001)) ;29 CS
[S] 11 12
[P] 8 54

[11] weight: 0 distance: 4
(assert (= (bv-comp #start  0b1)   0b1)) ;30 BR
(assert (= @voto0    0b0)) ;32 NB
(assert (= @voto1    0b0)) ;33 NB
(assert (= @voto2    0b0)) ;34 NB
(assert (= @voto3    0b0)) ;35 NB
(assert (= @stato    0b0010)) ;36 NB
[S] 13
[P] 10

[12] weight: 0 distance: 9
(assert (= (bv-comp #start  0b1)   0b0)) ;31 BR
[S] 13
[P] 10

[13] weight: 1 distance: 9
[S] 14 15
[P] 11 12

[14] weight: 0 distance: 8
(assert (= (bv-comp #rtr  0b1)   0b1)) ;37 BR
(assert (= @cts    0b1)) ;39 NB
[S] 16
[P] 13

[15] weight: 0 distance: 8
(assert (= (bv-comp #rtr  0b1)   0b0)) ;38 BR
[S] 16
[P] 13

[16] weight: 1 distance: 8
[S] 18 17
[P] 14 15

[17] weight: 0 distance: 7
(assert (= (bv-comp #rtr  0b0)   0b1)) ;40 BR
(assert (= @cts    0b0)) ;42 NB
[S] 19
[P] 16

[18] weight: 0 distance: 7
(assert (= (bv-comp #rtr  0b0)   0b0)) ;41 BR
[S] 19
[P] 16

[19] weight: 0 distance: 7
[S] 5
[P] 18 17

[20] weight: 1 distance: 4
(assert (= #stato    0b0010)) ;43 CS
[S] 21 22
[P] 11

[21] weight: 0 distance: 7
(assert (= (bv-comp #start  0b0)   0b1)) ;44 BR
(assert (= @stato    0b0011)) ;46 NB
[S] 23
[P] 20

[22] weight: 1 distance: 3
(assert (= (bv-comp #start  0b0)   0b0)) ;45 BR
[S] 24 25
[P] 20

[23] weight: 0 distance: 7
[S] 5
[P] 21 26

[24] weight: 1 distance: 2
(assert (= (bv-comp #key  0b1)   0b1)) ;47 BR
(assert (= @voto0    #key )) ;49 NB
[S] 27 28
[P] 22

[25] weight: 0 distance: 7
(assert (= (bv-comp #key  0b1)   0b0)) ;48 BR
(assert (= @voto0    0b0)) ;58 NB
(assert (= @voto1    0b0)) ;59 NB
(assert (= @voto2    0b0)) ;60 NB
(assert (= @voto3    0b0)) ;61 NB
[S] 26
[P] 22

[26] weight: 0 distance: 7
[S] 23
[P] 25 32

[27] weight: 0 distance: 1
(assert (= (bv-comp (bv-and (bv-xor #g_button  #last_g ) #g_button ) 0b1)   0b1)) ;50 BR
(assert (= @voto1    (bv-not #voto1 ))) ;52 NB
[S] 29
[P] 24

[28] weight: 0 distance: 1
(assert (= (bv-comp (bv-and (bv-xor #g_button  #last_g ) #g_button ) 0b1)   0b0)) ;51 BR
[S] 29
[P] 24

[29] weight: 1 distance: 1
[S] 30 31
[P] 27 28

[30] weight: 0 distance: 7
(assert (= (bv-comp (bv-and (bv-xor #r_button  #last_r ) #r_button ) 0b1)   0b1)) ;53 BR
(assert (= @voto2    (bv-not #voto2 ))) ;55 NB
[S] 32
[P] 29

[31] weight: 0 distance: 0
(assert (= (bv-comp (bv-and (bv-xor #r_button  #last_r ) #r_button ) 0b1)   0b0)) ;54 BR
[S] 32
[P] 29

[32] weight: 0 distance: 7
(assert (= @last_g    #g_button )) ;56 NB
(assert (= @last_r    #r_button )) ;57 NB
[S] 26
[P] 30 31

[33] weight: 0 distance: 7
(assert (= #stato    0b0011)) ;62 CS
(assert (= @voto3    (bv-xor #voto0  (bv-xor #voto1  #voto2 )))) ;63 NB
(assert (= @stato    0b0100)) ;64 NB
(assert (= @voto0    0b0)) ;65 NB
[S] 5
[P] 21

[34] weight: 1 distance: 8
(assert (= #stato    0b0100)) ;66 CS
[S] 35 36
[P] 33 50 61

[35] weight: 1 distance: 7
(assert (= (bv-comp #rtr  0b1)   0b1)) ;67 BR
(assert (= @v_out    (bv-concat #voto3  #voto2  #voto1  #voto0 ))) ;69 NB
(assert (= @cts    0b1)) ;70 NB
[S] 38 39
[P] 34

[36] weight: 0 distance: 7
(assert (= (bv-comp #rtr  0b1)   0b0)) ;68 BR
[S] 37
[P] 34

[37] weight: 0 distance: 7
[S] 5
[P] 36 40

[38] weight: 0 distance: 6
(assert (= (bv-and (bv-and (bv-and (bv-comp #voto0  0b0) (bv-comp #voto1  0b1)) (bv-comp #voto2  0b1)) (bv-comp #voto3  0b0))   0b1)) ;71 BR
(assert (= @stato    0b1000)) ;73 NB
[S] 40
[P] 35

[39] weight: 0 distance: 7
(assert (= (bv-and (bv-and (bv-and (bv-comp #voto0  0b0) (bv-comp #voto1  0b1)) (bv-comp #voto2  0b1)) (bv-comp #voto3  0b0))   0b0)) ;72 BR
(assert (= @stato    0b0101)) ;74 NB
[S] 40
[P] 35

[40] weight: 0 distance: 7
[S] 37
[P] 38 39

[41] weight: 1 distance: 8
(assert (= #stato    0b0101)) ;75 CS
[S] 42 43
[P] 39

[42] weight: 0 distance: 7
(assert (= (bv-comp #rts  0b0)   0b1)) ;76 BR
(assert (= @ctr    0b1)) ;78 NB
(assert (= @stato    0b0110)) ;79 NB
[S] 44
[P] 41

[43] weight: 0 distance: 7
(assert (= (bv-comp #rts  0b0)   0b0)) ;77 BR
[S] 44
[P] 41

[44] weight: 0 distance: 7
[S] 5
[P] 42 43

[45] weight: 1 distance: 8
(assert (= #stato    0b0110)) ;80 CS
[S] 46 47
[P] 42

[46] weight: 0 distance: 7
(assert (= (bv-comp #rts  0b1)   0b1)) ;81 BR
(assert (= @voto0    (bv-extract 0 0 #v_in ))) ;83 NB
(assert (= @voto1    (bv-extract 1 1 #v_in ))) ;84 NB
(assert (= @voto2    (bv-extract 2 2 #v_in ))) ;85 NB
(assert (= @voto3    (bv-extract 3 3 #v_in ))) ;86 NB
(assert (= @ctr    0b0)) ;87 NB
(assert (= @stato    0b0111)) ;88 NB
[S] 48
[P] 45

[47] weight: 0 distance: 7
(assert (= (bv-comp #rts  0b1)   0b0)) ;82 BR
[S] 48
[P] 45

[48] weight: 0 distance: 7
[S] 5
[P] 46 47

[49] weight: 1 distance: 8
(assert (= #stato    0b0111)) ;89 CS
[S] 50 51
[P] 46

[50] weight: 0 distance: 7
(assert (= (bv-comp #rtr  0b0)   0b1)) ;90 BR
(assert (= @cts    0b0)) ;92 NB
(assert (= @stato    0b0100)) ;93 NB
[S] 52
[P] 49

[51] weight: 0 distance: 7
(assert (= (bv-comp #rtr  0b0)   0b0)) ;91 BR
[S] 52
[P] 49

[52] weight: 0 distance: 7
[S] 5
[P] 50 51

[53] weight: 1 distance: 6
(assert (= #stato    0b1000)) ;94 CS
[S] 54 55
[P] 38

[54] weight: 0 distance: 5
(assert (= (bv-comp #rtr  0b0)   0b1)) ;95 BR
(assert (= @cts    0b0)) ;97 NB
(assert (= @stato    0b0001)) ;98 NB
[S] 56
[P] 53

[55] weight: 0 distance: 7
(assert (= (bv-comp #rtr  0b0)   0b0)) ;96 BR
[S] 56
[P] 53

[56] weight: 0 distance: 7
[S] 5
[P] 54 55

[57] weight: 1 distance: 8
(assert (= #stato    0b1001)) ;99 CS
(assert (= @voto0    (bv-extract 0 0 #v_in ))) ;100 NB
(assert (= @voto1    (bv-extract 1 1 #v_in ))) ;101 NB
(assert (= @voto2    (bv-extract 2 2 #v_in ))) ;102 NB
(assert (= @voto3    (bv-extract 3 3 #v_in ))) ;103 NB
(assert (= @sign    0b1000)) ;104 NB
[S] 58 59
[P] 7

[58] weight: 0 distance: 7
(assert (= (bv-and (bv-and (bv-and (bv-comp #voto0  0b1) (bv-comp #voto1  0b1)) (bv-comp #voto2  0b1)) (bv-comp #voto3  0b1))   0b1)) ;105 BR
(assert (= @stato    0b1010)) ;107 NB
[S] 60
[P] 57

[59] weight: 0 distance: 7
(assert (= (bv-and (bv-and (bv-and (bv-comp #voto0  0b1) (bv-comp #voto1  0b1)) (bv-comp #voto2  0b1)) (bv-comp #voto3  0b1))   0b0)) ;106 BR
[S] 60
[P] 57

[60] weight: 0 distance: 7
[S] 5
[P] 58 59

[61] weight: 0 distance: 7
(assert (= #stato    0b1010)) ;108 CS
(assert (= @voto0    (bv-xor 0b1 (bv-extract 0 0 #sign )))) ;109 NB
(assert (= @voto0    (bv-xor 0b0 (bv-extract 1 1 #sign )))) ;110 NB
(assert (= @voto0    (bv-xor 0b0 (bv-extract 2 2 #sign )))) ;111 NB
(assert (= @voto0    (bv-xor 0b1 (bv-extract 3 3 #sign )))) ;112 NB
(assert (= @stato    0b0100)) ;113 NB
[S] 5
[P] 58

*/

//state variables: ctr cts sign stato

