/*
[1] weight: 1 distance: 3
[S] 2 3
[P] 4

[2] weight: 0 distance: 2
(assert (= (bv-comp #reset  0b1)   0b1)) ;0 BR
(assert (= @stato    0b000)) ;2 NB
(assert (= @outp    0b0)) ;3 NB
(assert (= @overflw    0b0)) ;4 NB
[S] 4
[P] 1

[3] weight: 1 distance: 268435455
(assert (= (bv-comp #reset  0b1)   0b0)) ;1 BR
[S] 6 10 14 18 22 26 30 34
[P] 1

[4] weight: 0 distance: 3
[P] 2 5

[5] weight: 0 distance: 3
[S] 4
[P] 9 13 17 21 25 29 33 37

[6] weight: 1 distance: 2
(assert (= #stato    0b000)) ;5 CS
[S] 7 8
[P] 2 32 36

[7] weight: 0 distance: 1
(assert (= (bv-and (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b1)) ;6 BR
(assert (= @stato    0b100)) ;8 NB
[S] 9
[P] 6

[8] weight: 0 distance: 3
(assert (= (bv-and (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b0)) ;7 BR
(assert (= @stato    0b001)) ;9 NB
[S] 9
[P] 6

[9] weight: 0 distance: 3
(assert (= @outp    (bv-or #line1  #line2 ))) ;10 NB
(assert (= @overflw    0b0)) ;11 NB
[S] 5
[P] 7 8

[10] weight: 1 distance: 2
(assert (= #stato    0b011)) ;12 CS
[S] 11 12
[P] 31 35

[11] weight: 0 distance: 1
(assert (= (bv-and (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b1)) ;13 BR
(assert (= @stato    0b100)) ;15 NB
[S] 13
[P] 10

[12] weight: 0 distance: 3
(assert (= (bv-and (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b0)) ;14 BR
(assert (= @stato    0b001)) ;16 NB
[S] 13
[P] 10

[13] weight: 0 distance: 3
(assert (= @outp    (bv-or #line1  #line2 ))) ;17 NB
(assert (= @overflw    0b1)) ;18 NB
[S] 5
[P] 11 12

[14] weight: 1 distance: 4
(assert (= #stato    0b001)) ;19 CS
[S] 15 16
[P] 8 12

[15] weight: 0 distance: 3
(assert (= (bv-and (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b1)) ;20 BR
(assert (= @stato    0b101)) ;22 NB
[S] 17
[P] 14

[16] weight: 0 distance: 3
(assert (= (bv-and (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b0)) ;21 BR
(assert (= @stato    0b010)) ;23 NB
[S] 17
[P] 14

[17] weight: 0 distance: 3
(assert (= @outp    (bv-or #line1  #line2 ))) ;24 NB
(assert (= @overflw    0b0)) ;25 NB
[S] 5
[P] 15 16

[18] weight: 1 distance: 1
(assert (= #stato    0b100)) ;26 CS
[S] 19 20
[P] 7 11

[19] weight: 0 distance: 3
(assert (= (bv-or (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b1)) ;27 BR
(assert (= @stato    0b101)) ;29 NB
[S] 21
[P] 18

[20] weight: 0 distance: 0
(assert (= (bv-or (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b0)) ;28 BR
(assert (= @stato    0b010)) ;30 NB
[S] 21
[P] 18

[21] weight: 0 distance: 3
(assert (= @outp    (bv-not (bv-xor #line1  #line2 )))) ;31 NB
(assert (= @overflw    0b0)) ;32 NB
[S] 5
[P] 19 20

[22] weight: 1 distance: 4
(assert (= #stato    0b010)) ;33 CS
[S] 23 24
[P] 16 20

[23] weight: 0 distance: 3
(assert (= (bv-and (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b1)) ;34 BR
(assert (= @stato    0b111)) ;36 NB
[S] 25
[P] 22

[24] weight: 0 distance: 3
(assert (= (bv-and (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b0)) ;35 BR
(assert (= @stato    0b110)) ;37 NB
[S] 25
[P] 22

[25] weight: 0 distance: 3
(assert (= @outp    (bv-or #line1  #line2 ))) ;38 NB
(assert (= @overflw    0b0)) ;39 NB
[S] 5
[P] 23 24

[26] weight: 1 distance: 4
(assert (= #stato    0b101)) ;40 CS
[S] 27 28
[P] 15 19

[27] weight: 0 distance: 3
(assert (= (bv-or (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b1)) ;41 BR
(assert (= @stato    0b111)) ;43 NB
[S] 29
[P] 26

[28] weight: 0 distance: 3
(assert (= (bv-or (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b0)) ;42 BR
(assert (= @stato    0b110)) ;44 NB
[S] 29
[P] 26

[29] weight: 0 distance: 3
(assert (= @outp    (bv-not (bv-or #line1  #line2 )))) ;45 NB
(assert (= @overflw    0b0)) ;46 NB
[S] 5
[P] 27 28

[30] weight: 1 distance: 3
(assert (= #stato    0b110)) ;47 CS
[S] 31 32
[P] 24 28

[31] weight: 0 distance: 2
(assert (= (bv-and (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b1)) ;48 BR
(assert (= @stato    0b011)) ;50 NB
[S] 33
[P] 30

[32] weight: 0 distance: 2
(assert (= (bv-and (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b0)) ;49 BR
(assert (= @stato    0b000)) ;51 NB
[S] 33
[P] 30

[33] weight: 0 distance: 3
(assert (= @outp    (bv-or #line1  #line2 ))) ;52 NB
(assert (= @overflw    0b0)) ;53 NB
[S] 5
[P] 31 32

[34] weight: 1 distance: 3
(assert (= #stato    0b111)) ;54 CS
[S] 35 36
[P] 23 27

[35] weight: 0 distance: 2
(assert (= (bv-or (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b1)) ;55 BR
(assert (= @stato    0b011)) ;57 NB
[S] 37
[P] 34

[36] weight: 0 distance: 2
(assert (= (bv-or (bv-comp #line1  0b1) (bv-comp #line2  0b1))   0b0)) ;56 BR
(assert (= @stato    0b000)) ;58 NB
[S] 37
[P] 34

[37] weight: 0 distance: 3
(assert (= @outp    (bv-not (bv-or #line1  #line2 )))) ;59 NB
(assert (= @overflw    0b0)) ;60 NB
[S] 5
[P] 35 36

*/

//state variables: overflw stato

