(define ackout_0 ::(bitvector 1))
(define cc_mux_0 ::(bitvector 2))
(define enable_count_0 ::(bitvector 1))
(define state_0 ::(bitvector 3))
(define uscite_0 ::(bitvector 2))
(define clock_0 ::(bitvector 1))
(define cont_eql_0 ::(bitvector 1))
(define eql_0 ::(bitvector 1))
(define reset_0 ::(bitvector 1))
(define ackout_1 ::(bitvector 1))
(define cc_mux_1 ::(bitvector 2))
(define enable_count_1 ::(bitvector 1))
(define state_1 ::(bitvector 3))
(define uscite_1 ::(bitvector 2))
(define clock_1 ::(bitvector 1))
(define cont_eql_1 ::(bitvector 1))
(define eql_1 ::(bitvector 1))
(define reset_1 ::(bitvector 1))
(define ackout_2 ::(bitvector 1))
(define cc_mux_2 ::(bitvector 2))
(define enable_count_2 ::(bitvector 1))
(define state_2 ::(bitvector 3))
(define uscite_2 ::(bitvector 2))
(define clock_2 ::(bitvector 1))
(define cont_eql_2 ::(bitvector 1))
(define eql_2 ::(bitvector 1))
(define reset_2 ::(bitvector 1))
(define ackout_3 ::(bitvector 1))
(define cc_mux_3 ::(bitvector 2))
(define enable_count_3 ::(bitvector 1))
(define state_3 ::(bitvector 3))
(define uscite_3 ::(bitvector 2))
(define clock_3 ::(bitvector 1))
(define cont_eql_3 ::(bitvector 1))
(define eql_3 ::(bitvector 1))
(define reset_3 ::(bitvector 1))
(define ackout_4 ::(bitvector 1))
(define cc_mux_4 ::(bitvector 2))
(define enable_count_4 ::(bitvector 1))
(define state_4 ::(bitvector 3))
(define uscite_4 ::(bitvector 2))
(define clock_4 ::(bitvector 1))
(define cont_eql_4 ::(bitvector 1))
(define eql_4 ::(bitvector 1))
(define reset_4 ::(bitvector 1))
(define ackout_5 ::(bitvector 1))
(define cc_mux_5 ::(bitvector 2))
(define enable_count_5 ::(bitvector 1))
(define state_5 ::(bitvector 3))
(define uscite_5 ::(bitvector 2))
(define clock_5 ::(bitvector 1))
(define cont_eql_5 ::(bitvector 1))
(define eql_5 ::(bitvector 1))
(define reset_5 ::(bitvector 1))
(define ackout_6 ::(bitvector 1))
(define cc_mux_6 ::(bitvector 2))
(define enable_count_6 ::(bitvector 1))
(define state_6 ::(bitvector 3))
(define uscite_6 ::(bitvector 2))
(define clock_6 ::(bitvector 1))
(define cont_eql_6 ::(bitvector 1))
(define eql_6 ::(bitvector 1))
(define reset_6 ::(bitvector 1))
(define ackout_7 ::(bitvector 1))
(define cc_mux_7 ::(bitvector 2))
(define enable_count_7 ::(bitvector 1))
(define state_7 ::(bitvector 3))
(define uscite_7 ::(bitvector 2))
(define clock_7 ::(bitvector 1))
(define cont_eql_7 ::(bitvector 1))
(define eql_7 ::(bitvector 1))
(define reset_7 ::(bitvector 1))
(define ackout_8 ::(bitvector 1))
(define cc_mux_8 ::(bitvector 2))
(define enable_count_8 ::(bitvector 1))
(define state_8 ::(bitvector 3))
(define uscite_8 ::(bitvector 2))
(define clock_8 ::(bitvector 1))
(define cont_eql_8 ::(bitvector 1))
(define eql_8 ::(bitvector 1))
(define reset_8 ::(bitvector 1))
(define ackout_9 ::(bitvector 1))
(define cc_mux_9 ::(bitvector 2))
(define enable_count_9 ::(bitvector 1))
(define state_9 ::(bitvector 3))
(define uscite_9 ::(bitvector 2))
(define clock_9 ::(bitvector 1))
(define cont_eql_9 ::(bitvector 1))
(define eql_9 ::(bitvector 1))
(define reset_9 ::(bitvector 1))
(define ackout_10 ::(bitvector 1))
(define cc_mux_10 ::(bitvector 2))
(define enable_count_10 ::(bitvector 1))
(define state_10 ::(bitvector 3))
(define uscite_10 ::(bitvector 2))
(define clock_10 ::(bitvector 1))
(define cont_eql_10 ::(bitvector 1))
(define eql_10 ::(bitvector 1))
(define reset_10 ::(bitvector 1))
(define ackout_11 ::(bitvector 1))
(define cc_mux_11 ::(bitvector 2))
(define enable_count_11 ::(bitvector 1))
(define state_11 ::(bitvector 3))
(define uscite_11 ::(bitvector 2))
(define clock_11 ::(bitvector 1))
(define cont_eql_11 ::(bitvector 1))
(define eql_11 ::(bitvector 1))
(define reset_11 ::(bitvector 1))
(assert (= ackout_0 0b0))
(assert (= cc_mux_0 0b00))
(assert (= enable_count_0 0b0))
(assert (= state_0 0b000))
(assert (= uscite_0 0b00))

